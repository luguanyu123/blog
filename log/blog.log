2022-04-29 18:29:07.312 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 123608 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 18:29:07.390 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 18:29:07.502 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 18:29:07.502 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 18:29:09.198 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 18:29:09.205 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 18:29:09.206 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 18:29:09.206 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 18:29:09.293 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 18:29:09.293 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1791 ms
2022-04-29 18:29:10.004 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 18:29:10.102 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 18:29:10.491 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 18:29:10.504 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 18:29:10.522 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 18:29:10.531 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 3.824 seconds (JVM running for 5.952)
2022-04-29 18:29:55.259 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 18:29:55.259 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 18:29:55.268 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2022-04-29 18:29:55.319 [http-nio-8080-exec-1] INFO  com.lu.aspect.LogAspect - Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.lu.web.IndexController.indexPage', args=[1, {}]}
2022-04-29 18:29:55.347 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-04-29 18:29:56.528 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-04-29 18:29:56.573 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id JOIN t_user u ON b.user_id = u.id WHERE published = 1
2022-04-29 18:29:56.593 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - ==> Parameters: 
2022-04-29 18:29:57.318 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==    Columns: count(0)
2022-04-29 18:29:57.319 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==        Row: 8
2022-04-29 18:29:57.340 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==      Total: 1
2022-04-29 18:29:57.517 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email from t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id where published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 18:29:57.518 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - ==> Parameters: 4(Integer)
2022-04-29 18:29:57.737 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 18:29:57.745 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:29:57.747 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:29:57.749 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:29:57.750 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:29:57.751 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - <==      Total: 4
2022-04-29 18:29:57.754 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 18:29:57.754 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 18:29:57.821 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 18:29:57.821 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 18:29:57.824 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 18:29:57.825 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 18:29:57.826 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 18:29:57.827 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 18:29:57.828 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 18:29:57.829 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 18:29:57.829 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 18:29:57.830 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 18:29:57.830 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 18:29:57.830 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 18:29:57.831 [http-nio-8080-exec-1] INFO  com.lu.aspect.LogAspect - Result : index
2022-04-29 18:31:42.743 [Thread-13] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2022-04-29 18:31:42.744 [Thread-13] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2022-04-29 18:31:42.752 [Thread-13] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2022-04-29 18:31:43.001 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 123608 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 18:31:43.002 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 18:31:43.757 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 18:31:43.758 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 18:31:43.759 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 18:31:43.761 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 18:31:43.806 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 18:31:43.807 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 800 ms
2022-04-29 18:31:44.105 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 18:31:44.148 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 18:31:44.425 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 18:31:44.435 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 18:31:44.438 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 18:31:44.441 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 1.521 seconds (JVM running for 159.862)
2022-04-29 18:31:44.442 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2022-04-29 18:32:02.752 [Thread-20] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2022-04-29 18:32:02.924 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 123608 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 18:32:02.925 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 18:32:03.241 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 18:32:03.241 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 18:32:03.241 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 18:32:03.242 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 18:32:03.263 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 18:32:03.263 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 335 ms
2022-04-29 18:32:03.513 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 18:32:03.570 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 18:32:03.948 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 18:32:03.968 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 18:32:03.974 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 18:32:03.979 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 1.089 seconds (JVM running for 179.399)
2022-04-29 18:32:03.981 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2022-04-29 18:32:19.077 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 120956 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 18:32:19.080 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 18:32:19.139 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 18:32:19.139 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 18:32:20.235 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 18:32:20.242 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 18:32:20.242 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 18:32:20.242 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 18:32:20.331 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 18:32:20.332 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1193 ms
2022-04-29 18:32:20.872 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 18:32:20.946 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 18:32:21.340 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 18:32:21.362 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 18:32:21.381 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 18:32:21.393 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 2.829 seconds (JVM running for 4.45)
2022-04-29 18:32:27.431 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 18:32:27.432 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 18:32:27.439 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2022-04-29 18:32:51.781 [http-nio-8080-exec-4] INFO  com.lu.aspect.LogAspect - Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.lu.web.IndexController.indexPage', args=[1, {}]}
2022-04-29 18:32:51.801 [http-nio-8080-exec-4] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-04-29 18:32:52.513 [http-nio-8080-exec-4] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-04-29 18:32:52.545 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id JOIN t_user u ON b.user_id = u.id WHERE published = 1
2022-04-29 18:32:52.562 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - ==> Parameters: 
2022-04-29 18:32:52.788 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==    Columns: count(0)
2022-04-29 18:32:52.788 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==        Row: 8
2022-04-29 18:32:52.788 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==      Total: 1
2022-04-29 18:32:52.790 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email from t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id where published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 18:32:52.790 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - ==> Parameters: 4(Integer)
2022-04-29 18:32:52.792 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 18:32:52.795 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:32:52.796 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:32:52.797 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:32:52.798 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:32:52.816 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - <==      Total: 4
2022-04-29 18:32:52.818 [http-nio-8080-exec-4] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 18:32:52.819 [http-nio-8080-exec-4] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 18:32:52.828 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 18:32:52.829 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 18:32:52.830 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 18:32:52.843 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 18:32:52.844 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 18:32:52.845 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 18:32:52.846 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 18:32:52.847 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 18:32:52.848 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 18:32:52.849 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 18:32:52.849 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 18:32:52.849 [http-nio-8080-exec-4] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 18:32:52.850 [http-nio-8080-exec-4] INFO  com.lu.aspect.LogAspect - Result : index
2022-04-29 18:33:19.566 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 120632 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 18:33:19.569 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 18:33:19.617 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 18:33:19.618 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 18:33:21.042 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 18:33:21.050 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 18:33:21.050 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 18:33:21.051 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 18:33:21.149 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 18:33:21.149 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1531 ms
2022-04-29 18:33:21.809 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 18:33:23.054 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 18:33:23.395 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 18:33:23.410 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 18:33:23.428 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 18:33:23.436 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 4.28 seconds (JVM running for 5.838)
2022-04-29 18:33:25.193 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 18:33:25.193 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 18:33:25.205 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2022-04-29 18:33:31.157 [http-nio-8080-exec-9] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/login2，Exception : {}
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:626)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lu.web.admin.LoginController.login2(LoginController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 18:33:31.159 [http-nio-8080-exec-9] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.]
2022-04-29 18:33:33.030 [http-nio-8080-exec-10] INFO  com.lu.aspect.LogAspect - Request : {url='http://localhost:8080/types', ip='0:0:0:0:0:0:0:1', classMethod='com.lu.web.TypeShowController.typesPage', args=[-1, {}]}
2022-04-29 18:33:33.049 [http-nio-8080-exec-10] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-04-29 18:33:33.573 [http-nio-8080-exec-10] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-04-29 18:33:33.579 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findAllBlog - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email from t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id ORDER BY b.create_time DESC
2022-04-29 18:33:33.601 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findAllBlog - ==> Parameters: 
2022-04-29 18:33:33.921 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlog - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 18:33:33.923 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlog - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:33:33.925 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlog - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:33:33.926 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlog - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:33:33.927 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlog - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:33:33.928 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlog - <==        Row: 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:33:33.928 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlog - <==        Row: 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 7, spring, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:33:33.929 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlog - <==        Row: 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:33:33.930 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlog - <==        Row: 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:33:33.931 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findAllBlog - <==      Total: 8
2022-04-29 18:33:33.937 [http-nio-8080-exec-10] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 18:33:33.937 [http-nio-8080-exec-10] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 18:33:33.938 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 18:33:33.938 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 18:33:33.940 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 18:33:33.941 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 18:33:33.941 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 18:33:33.942 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 18:33:33.943 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 18:33:33.944 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 18:33:33.944 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 18:33:33.947 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 18:33:33.948 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 18:33:33.948 [http-nio-8080-exec-10] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 18:33:33.951 [http-nio-8080-exec-10] INFO  com.lu.aspect.LogAspect - Result : types
2022-04-29 18:33:35.653 [http-nio-8080-exec-1] INFO  com.lu.aspect.LogAspect - Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.lu.web.IndexController.indexPage', args=[1, {}]}
2022-04-29 18:33:35.678 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id JOIN t_user u ON b.user_id = u.id WHERE published = 1
2022-04-29 18:33:35.679 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - ==> Parameters: 
2022-04-29 18:33:35.679 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==    Columns: count(0)
2022-04-29 18:33:35.679 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==        Row: 8
2022-04-29 18:33:35.680 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==      Total: 1
2022-04-29 18:33:35.681 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email from t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id where published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 18:33:35.682 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - ==> Parameters: 4(Integer)
2022-04-29 18:33:36.333 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 18:33:36.333 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:33:36.334 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:33:36.335 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:33:36.335 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:33:36.336 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - <==      Total: 4
2022-04-29 18:33:36.337 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 18:33:36.337 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 18:33:36.338 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 18:33:36.338 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 18:33:36.339 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 18:33:36.339 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 18:33:36.340 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 18:33:36.340 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 18:33:36.341 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 18:33:36.341 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 18:33:36.342 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 18:33:36.342 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 18:33:36.342 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 18:33:36.343 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 18:33:36.343 [http-nio-8080-exec-1] INFO  com.lu.aspect.LogAspect - Result : index
2022-04-29 18:33:45.837 [http-nio-8080-exec-6] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/login2，Exception : {}
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:626)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lu.web.admin.LoginController.login2(LoginController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 18:33:45.838 [http-nio-8080-exec-6] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.]
2022-04-29 18:35:13.748 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 122796 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 18:35:13.751 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 18:35:13.803 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 18:35:13.803 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 18:35:14.856 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 18:35:14.862 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 18:35:14.863 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 18:35:14.863 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 18:35:14.943 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 18:35:14.943 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1140 ms
2022-04-29 18:35:15.482 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 18:35:15.556 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 18:35:15.872 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 18:35:15.885 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 18:35:15.900 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 18:35:15.908 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 2.59 seconds (JVM running for 4.063)
2022-04-29 18:35:20.689 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 18:35:20.689 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 18:35:20.697 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2022-04-29 18:37:13.117 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 124404 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 18:37:13.121 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 18:37:13.182 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 18:37:13.182 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 18:37:14.289 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 18:37:14.297 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 18:37:14.298 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 18:37:14.298 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 18:37:14.395 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 18:37:14.395 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1213 ms
2022-04-29 18:37:15.061 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 18:37:15.146 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 18:37:15.575 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 18:37:15.589 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 18:37:15.606 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 18:37:15.616 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 2.978 seconds (JVM running for 4.693)
2022-04-29 18:37:18.718 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 18:37:18.718 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 18:37:18.725 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2022-04-29 18:38:29.038 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 106548 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 18:38:29.043 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 18:38:29.106 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 18:38:29.107 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 18:38:30.117 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 18:38:30.123 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 18:38:30.123 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 18:38:30.124 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 18:38:30.205 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 18:38:30.205 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1098 ms
2022-04-29 18:38:30.725 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 18:38:30.797 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 18:38:31.115 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 18:38:31.128 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 18:38:31.144 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 18:38:31.152 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 2.537 seconds (JVM running for 4.019)
2022-04-29 18:38:36.490 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 18:38:36.491 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 18:38:36.498 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2022-04-29 18:38:40.828 [http-nio-8080-exec-9] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/login2，Exception : {}
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:626)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lu.web.admin.LoginController.login2(LoginController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 18:38:40.830 [http-nio-8080-exec-9] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.]
2022-04-29 18:38:42.433 [http-nio-8080-exec-5] INFO  com.lu.aspect.LogAspect - Request : {url='http://localhost:8080/types', ip='0:0:0:0:0:0:0:1', classMethod='com.lu.web.TypeShowController.typesPage', args=[-1, {}]}
2022-04-29 18:38:42.452 [http-nio-8080-exec-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-04-29 18:38:42.884 [http-nio-8080-exec-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-04-29 18:38:42.890 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findAllBlog - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email from t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id ORDER BY b.create_time DESC
2022-04-29 18:38:42.907 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findAllBlog - ==> Parameters: 
2022-04-29 18:38:43.232 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlog - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 18:38:43.234 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlog - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:38:43.236 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlog - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:38:43.237 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlog - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:38:43.238 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlog - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:38:43.239 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlog - <==        Row: 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:38:43.240 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlog - <==        Row: 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 7, spring, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:38:43.241 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlog - <==        Row: 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:38:43.241 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlog - <==        Row: 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 18:38:43.242 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findAllBlog - <==      Total: 8
2022-04-29 18:38:43.246 [http-nio-8080-exec-5] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 18:38:43.246 [http-nio-8080-exec-5] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 18:38:43.249 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 18:38:43.250 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 18:38:43.252 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 18:38:43.252 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 18:38:43.253 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 18:38:43.254 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 18:38:43.255 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 18:38:43.256 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 18:38:43.257 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 18:38:43.260 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 18:38:43.261 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 18:38:43.261 [http-nio-8080-exec-5] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 18:38:43.261 [http-nio-8080-exec-5] INFO  com.lu.aspect.LogAspect - Result : types
2022-04-29 18:38:51.960 [http-nio-8080-exec-7] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/login2，Exception : {}
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:626)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lu.web.admin.LoginController.login2(LoginController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 18:38:51.960 [http-nio-8080-exec-7] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.]
2022-04-29 18:39:15.923 [http-nio-8080-exec-3] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/login2，Exception : {}
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:213)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:422)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:367)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:110)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:59)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:395)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1234)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1016)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 18:39:15.924 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2022-04-29 18:39:27.571 [http-nio-8080-exec-2] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/login2，Exception : {}
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:626)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lu.web.admin.LoginController.login2(LoginController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 18:39:27.573 [http-nio-8080-exec-2] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.]
2022-04-29 18:39:27.582 [http-nio-8080-exec-4] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/login2，Exception : {}
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:626)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lu.web.admin.LoginController.login2(LoginController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 18:39:27.583 [http-nio-8080-exec-4] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.]
2022-04-29 18:40:44.584 [http-nio-8080-exec-10] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/login2，Exception : {}
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:213)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:422)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:367)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:110)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:59)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:395)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1234)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1016)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 18:40:44.584 [http-nio-8080-exec-10] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2022-04-29 18:42:46.680 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 123900 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 18:42:46.683 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 18:42:46.740 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 18:42:46.741 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 18:42:47.848 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 18:42:47.854 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 18:42:47.854 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 18:42:47.855 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 18:42:47.935 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 18:42:47.935 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1194 ms
2022-04-29 18:42:48.450 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 18:42:48.524 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 18:42:48.985 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 18:42:48.999 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 18:42:49.017 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 18:42:49.025 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 2.781 seconds (JVM running for 4.415)
2022-04-29 18:42:54.967 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 18:42:54.968 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 18:42:54.981 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2022-04-29 18:42:55.024 [http-nio-8080-exec-1] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/login2，Exception : {}
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:626)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lu.web.admin.LoginController.login2(LoginController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 18:42:55.030 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.]
2022-04-29 18:43:02.265 [http-nio-8080-exec-10] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/login2，Exception : {}
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:626)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lu.web.admin.LoginController.login2(LoginController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 18:43:02.266 [http-nio-8080-exec-10] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.]
2022-04-29 18:43:39.994 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 91940 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 18:43:39.996 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 18:43:40.046 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 18:43:40.046 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 18:43:41.167 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 18:43:41.173 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 18:43:41.173 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 18:43:41.174 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 18:43:41.253 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 18:43:41.254 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1208 ms
2022-04-29 18:43:41.795 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 18:43:41.868 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 18:43:42.211 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 18:43:42.224 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 18:43:42.240 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 18:43:42.248 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 2.627 seconds (JVM running for 4.072)
2022-04-29 18:43:46.121 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 18:43:46.121 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 18:43:46.128 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2022-04-29 18:43:46.168 [http-nio-8080-exec-1] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/login2，Exception : {}
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:626)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lu.web.admin.LoginController.login2(LoginController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 18:43:46.171 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.]
2022-04-29 18:43:53.773 [http-nio-8080-exec-10] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/login2，Exception : {}
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:626)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lu.web.admin.LoginController.login2(LoginController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 18:43:53.774 [http-nio-8080-exec-10] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.]
2022-04-29 18:45:16.504 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 106104 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 18:45:16.507 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 18:45:16.582 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 18:45:16.582 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 18:45:17.818 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 18:45:17.824 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 18:45:17.825 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 18:45:17.825 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 18:45:17.911 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 18:45:17.911 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1329 ms
2022-04-29 18:45:18.459 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 18:45:18.533 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 18:45:18.874 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 18:45:18.887 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 18:45:18.903 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 18:45:18.911 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 2.994 seconds (JVM running for 4.526)
2022-04-29 18:45:22.729 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 18:45:22.730 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 18:45:22.741 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2022-04-29 18:45:22.784 [http-nio-8080-exec-1] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/login2，Exception : {}
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:626)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lu.web.admin.LoginController.login2(LoginController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 18:45:22.787 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.]
2022-04-29 18:45:29.293 [http-nio-8080-exec-10] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/login2，Exception : {}
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:626)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lu.web.admin.LoginController.login2(LoginController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 18:45:29.293 [http-nio-8080-exec-10] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.]
2022-04-29 18:45:48.465 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 102280 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 18:45:48.468 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 18:45:48.521 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 18:45:48.522 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 18:45:49.553 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 18:45:49.559 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 18:45:49.559 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 18:45:49.559 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 18:45:49.640 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 18:45:49.641 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1119 ms
2022-04-29 18:45:50.197 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 18:45:50.275 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 18:45:50.636 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 18:45:50.649 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 18:45:50.665 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 18:45:50.673 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 2.65 seconds (JVM running for 4.12)
2022-04-29 18:45:53.667 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 18:45:53.668 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 18:45:53.677 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2022-04-29 18:45:58.296 [http-nio-8080-exec-3] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/login2，Exception : {}
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:626)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lu.web.admin.LoginController.login2(LoginController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 18:45:58.298 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.]
2022-04-29 18:49:59.856 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 98344 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 18:49:59.863 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 18:49:59.974 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 18:49:59.974 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 18:50:02.128 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 18:50:02.140 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 18:50:02.141 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 18:50:02.141 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 18:50:02.241 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 18:50:02.241 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2267 ms
2022-04-29 18:50:03.096 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 18:50:03.222 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 18:50:03.724 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 18:50:03.747 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 18:50:03.775 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 18:50:03.786 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 4.799 seconds (JVM running for 7.068)
2022-04-29 18:50:06.927 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 18:50:06.928 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 18:50:06.957 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 29 ms
2022-04-29 18:50:07.024 [http-nio-8080-exec-1] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/login2，Exception : {}
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:626)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lu.web.admin.LoginController.login2(LoginController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 18:50:07.027 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.]
2022-04-29 18:50:23.243 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 119196 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 18:50:23.247 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 18:50:23.396 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 18:50:23.400 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 18:50:25.558 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 18:50:25.578 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 18:50:25.581 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 18:50:25.581 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 18:50:25.755 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 18:50:25.755 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2354 ms
2022-04-29 18:50:26.943 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 18:50:27.061 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 18:50:27.621 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 18:50:27.653 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 18:50:27.685 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 18:50:27.705 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 5.545 seconds (JVM running for 7.89)
2022-04-29 18:51:10.250 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 18:51:10.251 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 18:51:10.271 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 20 ms
2022-04-29 18:51:10.325 [http-nio-8080-exec-1] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/login2，Exception : {}
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:626)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lu.web.admin.LoginController.login2(LoginController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 18:51:10.336 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.]
2022-04-29 18:51:15.861 [http-nio-8080-exec-10] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/login2，Exception : {}
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:626)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lu.web.admin.LoginController.login2(LoginController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 18:51:15.862 [http-nio-8080-exec-10] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.]
2022-04-29 18:51:55.817 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 100668 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 18:51:55.821 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 18:51:55.891 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 18:51:55.891 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 18:51:57.358 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 18:51:57.364 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 18:51:57.364 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 18:51:57.365 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 18:51:57.480 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 18:51:57.480 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1589 ms
2022-04-29 18:51:58.190 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 18:51:58.292 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 18:51:58.747 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 18:51:58.763 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 18:51:58.788 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 18:51:58.796 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 3.647 seconds (JVM running for 5.582)
2022-04-29 18:52:02.036 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 18:52:02.039 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 18:52:02.051 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2022-04-29 18:52:40.588 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 122888 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 18:52:40.593 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 18:52:40.663 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 18:52:40.664 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 18:52:41.773 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 18:52:41.779 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 18:52:41.780 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 18:52:41.780 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 18:52:41.859 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 18:52:41.860 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1196 ms
2022-04-29 18:52:42.380 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 18:52:42.453 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 18:52:42.795 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 18:52:42.808 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 18:52:42.825 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 18:52:42.837 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 2.735 seconds (JVM running for 4.473)
2022-04-29 18:52:45.601 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 18:52:45.601 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 18:52:45.608 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2022-04-29 18:55:36.432 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 91560 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 18:55:36.434 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 18:55:36.495 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 18:55:36.495 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 18:55:37.591 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 18:55:37.597 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 18:55:37.598 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 18:55:37.598 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 18:55:37.679 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 18:55:37.679 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1184 ms
2022-04-29 18:55:38.217 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 18:55:38.296 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 18:55:38.647 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 18:55:38.660 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 18:55:38.676 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 18:55:38.684 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 2.696 seconds (JVM running for 4.154)
2022-04-29 18:55:44.928 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 18:55:44.929 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 18:55:44.937 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2022-04-29 19:00:27.584 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 122548 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:00:27.588 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:00:27.682 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:00:27.683 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:00:29.928 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:00:29.942 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:00:29.942 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:00:29.943 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:00:30.058 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:00:30.058 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2375 ms
2022-04-29 19:00:30.861 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:00:30.942 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'loginController' method 
com.lu.web.admin.LoginController#loginPage2()
to {GET /admin}: There is already 'loginController' bean method
com.lu.web.admin.LoginController#index() mapped.
2022-04-29 19:00:30.942 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2022-04-29 19:00:30.944 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2022-04-29 19:00:30.952 [restartedMain] INFO  o.s.b.a.logging.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-04-29 19:00:30.962 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'loginController' method 
com.lu.web.admin.LoginController#loginPage2()
to {GET /admin}: There is already 'loginController' bean method
com.lu.web.admin.LoginController#index() mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1794)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.lu.BlogApplication.main(BlogApplication.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'loginController' method 
com.lu.web.admin.LoginController#loginPage2()
to {GET /admin}: There is already 'loginController' bean method
com.lu.web.admin.LoginController#index() mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:636)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:603)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:318)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:378)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:75)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$1(AbstractHandlerMethodMapping.java:288)
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:286)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:258)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:217)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:205)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1790)
	... 22 common frames omitted
2022-04-29 19:01:17.123 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 121988 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:01:17.127 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:01:17.251 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:01:17.252 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:01:18.823 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:01:18.835 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:01:18.835 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:01:18.835 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:01:18.941 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:01:18.941 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1689 ms
2022-04-29 19:01:19.721 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:01:19.805 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'loginController' method 
com.lu.web.admin.LoginController#loginPage2()
to {GET /admin}: There is already 'loginController' bean method
com.lu.web.admin.LoginController#index() mapped.
2022-04-29 19:01:19.805 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2022-04-29 19:01:19.807 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2022-04-29 19:01:19.822 [restartedMain] INFO  o.s.b.a.logging.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-04-29 19:01:19.836 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'loginController' method 
com.lu.web.admin.LoginController#loginPage2()
to {GET /admin}: There is already 'loginController' bean method
com.lu.web.admin.LoginController#index() mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1794)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.lu.BlogApplication.main(BlogApplication.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'loginController' method 
com.lu.web.admin.LoginController#loginPage2()
to {GET /admin}: There is already 'loginController' bean method
com.lu.web.admin.LoginController#index() mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:636)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:603)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:318)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:378)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:75)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$1(AbstractHandlerMethodMapping.java:288)
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:286)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:258)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:217)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:205)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1790)
	... 22 common frames omitted
2022-04-29 19:01:45.747 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 91412 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:01:45.750 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:01:45.853 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:01:45.854 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:01:47.347 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:01:47.356 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:01:47.357 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:01:47.357 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:01:47.471 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:01:47.471 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1616 ms
2022-04-29 19:01:48.182 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:01:48.288 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:01:48.877 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:01:48.893 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:01:48.916 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:01:48.927 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 3.83 seconds (JVM running for 5.678)
2022-04-29 19:01:54.548 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 19:01:54.549 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 19:01:54.558 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2022-04-29 19:02:07.782 [http-nio-8080-exec-9] INFO  com.lu.aspect.LogAspect - Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.lu.web.IndexController.indexPage', args=[1, {}]}
2022-04-29 19:02:07.813 [http-nio-8080-exec-9] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-04-29 19:02:10.318 [http-nio-8080-exec-9] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-04-29 19:02:10.558 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id JOIN t_user u ON b.user_id = u.id WHERE published = 1
2022-04-29 19:02:10.606 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - ==> Parameters: 
2022-04-29 19:02:12.498 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==    Columns: count(0)
2022-04-29 19:02:12.498 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==        Row: 8
2022-04-29 19:02:12.499 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==      Total: 1
2022-04-29 19:02:12.500 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email from t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id where published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:02:12.503 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - ==> Parameters: 4(Integer)
2022-04-29 19:02:12.583 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:02:12.586 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:02:12.587 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:02:12.588 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:02:12.589 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:02:12.590 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - <==      Total: 4
2022-04-29 19:02:12.592 [http-nio-8080-exec-9] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:02:12.592 [http-nio-8080-exec-9] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:02:12.629 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:02:12.630 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:02:12.632 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:02:12.633 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:02:12.639 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:02:12.640 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:02:12.641 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:02:12.642 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:02:12.643 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:02:12.644 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:02:12.644 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:02:12.645 [http-nio-8080-exec-9] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:02:12.647 [http-nio-8080-exec-9] INFO  com.lu.aspect.LogAspect - Result : index
2022-04-29 19:02:53.414 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 124036 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:02:53.417 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:02:53.492 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:02:53.492 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:02:54.552 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:02:54.558 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:02:54.559 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:02:54.559 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:02:54.642 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:02:54.642 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1150 ms
2022-04-29 19:02:55.182 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:02:55.254 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:02:55.590 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:02:55.602 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:02:55.616 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:02:55.624 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 2.619 seconds (JVM running for 4.044)
2022-04-29 19:03:07.534 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 19:03:07.534 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 19:03:07.540 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2022-04-29 19:03:11.980 [http-nio-8080-exec-8] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/login2，Exception : {}
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:626)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lu.web.admin.LoginController.login2(LoginController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 19:03:11.981 [http-nio-8080-exec-8] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.]
2022-04-29 19:10:08.187 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 124412 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:10:08.190 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:10:08.249 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:10:08.249 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:10:09.062 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.lu.config.ShiroConfig$$EnhancerBySpringCGLIB$$743c2dac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:09.098 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:09.107 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c1ad2af8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:09.112 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:09.118 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:09.140 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:09.157 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:09.195 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:09.202 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:09.286 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:09.289 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:09.290 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userServiceImpl' of type [com.lu.service.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:09.291 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRealm' of type [com.lu.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:10.121 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:10.355 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:10:10.364 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:10:10.364 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:10:10.364 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:10:10.523 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:10:10.524 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2275 ms
2022-04-29 19:10:10.843 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:10:10.915 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:10:11.239 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:10:11.251 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:10:11.266 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:10:11.274 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 3.529 seconds (JVM running for 5.042)
2022-04-29 19:10:17.700 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 19:10:17.700 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 19:10:17.711 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2022-04-29 19:10:17.769 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-04-29 19:10:17.981 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-04-29 19:10:17.988 [http-nio-8080-exec-1] DEBUG com.lu.mapper.UserMapper.findByUsername - ==>  Preparing: select id, avatar, create_time, email, nickname, password, type, update_time, username from t_user where username = ?
2022-04-29 19:10:18.010 [http-nio-8080-exec-1] DEBUG com.lu.mapper.UserMapper.findByUsername - ==> Parameters: lu(String)
2022-04-29 19:10:18.318 [http-nio-8080-exec-1] TRACE com.lu.mapper.UserMapper.findByUsername - <==    Columns: id, avatar, create_time, email, nickname, password, type, update_time, username
2022-04-29 19:10:18.319 [http-nio-8080-exec-1] TRACE com.lu.mapper.UserMapper.findByUsername - <==        Row: 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu
2022-04-29 19:10:18.320 [http-nio-8080-exec-1] DEBUG com.lu.mapper.UserMapper.findByUsername - <==      Total: 1
2022-04-29 19:10:21.183 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:10:21.183 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:10:21.421 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:10:21.421 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:10:21.422 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:10:21.423 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:10:21.423 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:10:21.445 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:10:21.448 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:10:21.449 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:10:21.449 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:10:21.450 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 19:10:21.450 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:10:21.451 [http-nio-8080-exec-9] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:10:21.451 [http-nio-8080-exec-9] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:10:21.470 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:10:21.471 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:10:21.473 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:10:21.475 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:10:21.476 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:10:21.477 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:10:21.478 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:10:21.479 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:10:21.481 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:10:21.482 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:10:21.483 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:10:21.483 [http-nio-8080-exec-9] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:10:23.968 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:10:23.968 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String)
2022-04-29 19:10:23.994 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:10:23.994 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 8
2022-04-29 19:10:23.994 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:10:23.995 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:10:23.996 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: (String), 4(Integer)
2022-04-29 19:10:24.033 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:10:24.033 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:10:24.034 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:10:24.035 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:10:24.036 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:10:24.037 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:10:53.385 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 105272 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:10:53.388 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:10:53.449 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:10:53.449 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:10:54.208 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.lu.config.ShiroConfig$$EnhancerBySpringCGLIB$$857bc661] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:54.243 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:54.252 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$d2ecc3ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:54.258 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:54.263 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:54.285 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:54.301 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:54.346 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:54.363 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:54.472 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:54.479 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:54.481 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userServiceImpl' of type [com.lu.service.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:54.482 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRealm' of type [com.lu.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:55.327 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:10:55.612 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:10:55.622 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:10:55.622 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:10:55.623 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:10:55.775 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:10:55.776 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2327 ms
2022-04-29 19:10:56.075 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:10:56.150 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:10:56.565 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:10:56.587 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:10:56.607 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:10:56.620 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 3.783 seconds (JVM running for 6.213)
2022-04-29 19:11:01.325 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 19:11:01.325 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 19:11:01.334 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2022-04-29 19:11:06.152 [http-nio-8080-exec-10] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-04-29 19:11:06.273 [http-nio-8080-exec-10] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-04-29 19:11:06.279 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - ==>  Preparing: select id, avatar, create_time, email, nickname, password, type, update_time, username from t_user where username = ?
2022-04-29 19:11:06.296 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - ==> Parameters: lu(String)
2022-04-29 19:11:06.387 [http-nio-8080-exec-10] TRACE com.lu.mapper.UserMapper.findByUsername - <==    Columns: id, avatar, create_time, email, nickname, password, type, update_time, username
2022-04-29 19:11:06.389 [http-nio-8080-exec-10] TRACE com.lu.mapper.UserMapper.findByUsername - <==        Row: 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu
2022-04-29 19:11:06.391 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - <==      Total: 1
2022-04-29 19:11:07.538 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:11:07.538 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:11:08.148 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:11:08.148 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:11:08.149 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:11:08.150 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:11:08.150 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:11:08.151 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:11:08.153 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:11:08.154 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:11:08.154 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:11:08.155 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 19:11:08.155 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:11:08.156 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:11:08.156 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:11:08.158 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:11:08.159 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:11:08.160 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:11:08.164 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:11:08.165 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:11:08.166 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:11:08.167 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:11:08.168 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:11:08.169 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:11:08.170 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:11:08.170 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:11:08.171 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:12:54.159 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 101068 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:12:54.161 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:12:54.202 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:12:54.202 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:12:54.977 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.lu.config.ShiroConfig$$EnhancerBySpringCGLIB$$ce2ee416] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:12:55.022 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:12:55.034 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$1b9fe162] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:12:55.041 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:12:55.048 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:12:55.076 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:12:55.101 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:12:55.144 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:12:55.152 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:12:55.258 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:12:55.263 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:12:55.264 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userServiceImpl' of type [com.lu.service.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:12:55.266 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRealm' of type [com.lu.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:12:56.117 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:12:56.353 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:12:56.360 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:12:56.360 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:12:56.361 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:12:56.507 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:12:56.507 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2305 ms
2022-04-29 19:12:56.806 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:12:56.880 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:12:57.214 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:12:57.228 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:12:57.245 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:12:57.254 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 3.479 seconds (JVM running for 5.733)
2022-04-29 19:13:00.706 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 19:13:00.706 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 19:13:00.716 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2022-04-29 19:13:05.970 [http-nio-8080-exec-10] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-04-29 19:13:06.499 [http-nio-8080-exec-10] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-04-29 19:13:06.504 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - ==>  Preparing: select id, avatar, create_time, email, nickname, password, type, update_time, username from t_user where username = ?
2022-04-29 19:13:06.522 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - ==> Parameters: lu(String)
2022-04-29 19:13:06.672 [http-nio-8080-exec-10] TRACE com.lu.mapper.UserMapper.findByUsername - <==    Columns: id, avatar, create_time, email, nickname, password, type, update_time, username
2022-04-29 19:13:06.673 [http-nio-8080-exec-10] TRACE com.lu.mapper.UserMapper.findByUsername - <==        Row: 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu
2022-04-29 19:13:06.674 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - <==      Total: 1
2022-04-29 19:13:08.097 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:13:08.098 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:13:09.201 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:13:09.201 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:13:09.202 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:13:09.203 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:13:09.203 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:13:09.205 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:13:09.209 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:13:09.210 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:13:09.210 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:13:09.211 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 19:13:09.211 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:13:09.212 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:13:09.212 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:13:09.213 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:13:09.214 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:13:09.216 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:13:09.217 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:13:09.217 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:13:09.218 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:13:09.219 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:13:09.220 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:13:09.222 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:13:09.225 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:13:09.226 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:13:09.226 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:13:11.775 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:13:11.775 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String)
2022-04-29 19:13:11.776 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:13:11.776 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 8
2022-04-29 19:13:11.776 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:13:11.879 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:13:11.880 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: (String), 4(Integer)
2022-04-29 19:13:11.881 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:13:11.881 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:11.882 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:11.882 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:11.883 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:11.883 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:13:12.330 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:13:12.331 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String)
2022-04-29 19:13:12.424 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:13:12.424 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 8
2022-04-29 19:13:12.425 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:13:12.425 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:13:12.426 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: (String), 4(Integer)
2022-04-29 19:13:12.426 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:13:12.427 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:12.428 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:12.428 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:12.429 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:12.431 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:13:20.658 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:13:20.659 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String)
2022-04-29 19:13:20.659 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:13:20.659 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 8
2022-04-29 19:13:20.660 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:13:20.661 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:13:20.662 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: (String), 4(Integer)
2022-04-29 19:13:20.662 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:13:20.663 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:20.663 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:20.664 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:20.664 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:20.664 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:13:21.494 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:13:21.494 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String)
2022-04-29 19:13:21.495 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:13:21.495 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 8
2022-04-29 19:13:21.495 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:13:21.495 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:13:21.496 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: (String), 4(Integer)
2022-04-29 19:13:21.497 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:13:21.497 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:21.498 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:21.498 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:21.499 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:21.499 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:13:21.647 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:13:21.648 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String)
2022-04-29 19:13:21.648 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:13:21.648 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 8
2022-04-29 19:13:21.648 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:13:21.649 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:13:21.649 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: (String), 4(Integer)
2022-04-29 19:13:21.650 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:13:21.650 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:21.651 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:21.651 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:21.652 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:21.652 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:13:21.807 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:13:21.807 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String)
2022-04-29 19:13:21.808 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:13:21.808 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 8
2022-04-29 19:13:21.808 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:13:21.809 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:13:21.810 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: (String), 4(Integer)
2022-04-29 19:13:21.812 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:13:21.812 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:21.813 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:21.813 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:21.814 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:13:21.814 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:14:08.023 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:14:08.024 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:14:08.025 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:14:08.025 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:14:08.025 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:14:08.026 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:14:08.026 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:14:08.027 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:14:08.027 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:14:08.028 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:14:08.028 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:14:08.029 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 19:14:08.029 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:14:08.029 [http-nio-8080-exec-6] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:14:08.030 [http-nio-8080-exec-6] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:14:08.031 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:14:08.031 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:14:08.032 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:14:08.032 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:14:08.032 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:14:08.033 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:14:08.033 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:14:08.034 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:14:08.034 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:14:08.034 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:14:08.034 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:14:08.035 [http-nio-8080-exec-6] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:14:09.376 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:14:09.376 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:14:09.376 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:14:09.376 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:14:09.377 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:14:09.377 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?, ?
2022-04-29 19:14:09.377 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer), 4(Integer)
2022-04-29 19:14:09.378 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:14:09.378 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 8, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 1, 1, 6, 6, 遇到的异常
2022-04-29 19:14:09.378 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 10, 什么是ioc, 2022-04-08 19:04:25.714000, 0, 1, 7, 7, spring
2022-04-29 19:14:09.378 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 9, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 1, 1, 6, 6, 遇到的异常
2022-04-29 19:14:09.379 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 11, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 0, 1, 9, 9, springmvc
2022-04-29 19:14:09.379 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:14:09.379 [http-nio-8080-exec-3] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:14:09.379 [http-nio-8080-exec-3] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:14:09.380 [http-nio-8080-exec-3] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:14:09.380 [http-nio-8080-exec-3] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:14:09.380 [http-nio-8080-exec-3] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:14:09.381 [http-nio-8080-exec-3] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:14:09.381 [http-nio-8080-exec-3] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:14:09.381 [http-nio-8080-exec-3] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:14:09.382 [http-nio-8080-exec-3] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:14:09.382 [http-nio-8080-exec-3] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:14:09.382 [http-nio-8080-exec-3] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:14:09.382 [http-nio-8080-exec-3] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:14:09.383 [http-nio-8080-exec-3] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:14:09.383 [http-nio-8080-exec-3] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:14:18.165 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:14:18.165 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: Erro(String)
2022-04-29 19:14:18.166 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:14:18.166 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 1
2022-04-29 19:14:18.166 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:14:18.167 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:14:18.167 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: Erro(String), 4(Integer)
2022-04-29 19:14:18.168 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:14:18.168 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:14:18.168 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 1
2022-04-29 19:14:20.368 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:14:20.369 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: Erro(String)
2022-04-29 19:14:20.369 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:14:20.369 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 1
2022-04-29 19:14:20.369 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:14:20.370 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:14:20.370 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: Erro(String), 4(Integer)
2022-04-29 19:14:20.371 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:14:20.371 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:14:20.372 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 1
2022-04-29 19:14:23.301 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:14:23.302 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String)
2022-04-29 19:14:23.302 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:14:23.302 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 8
2022-04-29 19:14:23.302 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:14:23.303 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:14:23.303 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: (String), 4(Integer)
2022-04-29 19:14:23.304 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:14:23.305 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:14:23.305 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:14:23.306 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:14:23.306 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:14:23.306 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:14:27.266 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:14:27.266 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:14:27.267 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:14:27.267 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:14:27.267 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:14:27.268 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:14:27.268 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:14:27.364 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:14:27.364 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:14:27.364 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:14:27.364 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:14:27.365 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 19:14:27.366 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:14:27.366 [http-nio-8080-exec-10] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:14:27.366 [http-nio-8080-exec-10] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:14:27.367 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:14:27.367 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:14:27.368 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:14:27.368 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:14:27.368 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:14:27.369 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:14:27.369 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:14:27.369 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:14:27.369 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:14:27.370 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:14:27.371 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:14:27.372 [http-nio-8080-exec-10] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:14:27.573 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:14:27.576 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:14:27.577 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:14:27.577 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:14:27.577 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:14:27.578 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?, ?
2022-04-29 19:14:27.578 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer), 4(Integer)
2022-04-29 19:14:27.579 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:14:27.579 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 8, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 1, 1, 6, 6, 遇到的异常
2022-04-29 19:14:27.580 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 10, 什么是ioc, 2022-04-08 19:04:25.714000, 0, 1, 7, 7, spring
2022-04-29 19:14:27.580 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 9, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 1, 1, 6, 6, 遇到的异常
2022-04-29 19:14:27.580 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 11, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 0, 1, 9, 9, springmvc
2022-04-29 19:14:27.581 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:14:27.581 [http-nio-8080-exec-8] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:14:27.581 [http-nio-8080-exec-8] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:14:27.583 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:14:27.583 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:14:27.584 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:14:27.585 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:14:27.585 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:14:27.586 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:14:27.586 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:14:27.587 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:14:27.587 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:14:27.588 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:14:27.588 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:14:27.589 [http-nio-8080-exec-8] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:14:41.299 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:14:41.299 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: error(String)
2022-04-29 19:14:41.300 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:14:41.300 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 1
2022-04-29 19:14:41.300 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:14:41.301 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:14:41.301 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: error(String), 4(Integer)
2022-04-29 19:14:41.301 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:14:41.301 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:14:41.302 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 1
2022-04-29 19:14:47.641 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:14:47.642 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: field(String)
2022-04-29 19:14:47.642 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:14:47.642 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 19:14:47.642 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:14:53.066 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:14:53.066 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: field(String)
2022-04-29 19:14:53.067 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:14:53.067 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 19:14:53.067 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:14:55.224 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:14:55.225 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String)
2022-04-29 19:14:55.225 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:14:55.225 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 8
2022-04-29 19:14:55.226 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:14:55.226 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:14:55.226 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: (String), 4(Integer)
2022-04-29 19:14:55.227 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:14:55.227 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:14:55.227 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:14:55.228 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:14:55.228 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:14:55.228 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:14:56.368 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:14:56.368 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:14:56.369 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:14:56.369 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:14:56.369 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:14:56.370 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:14:56.370 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:14:56.370 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:14:56.371 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:14:56.371 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:14:56.371 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:14:56.371 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 19:14:56.371 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:14:56.372 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:14:56.372 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:14:56.373 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:14:56.373 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:14:56.373 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:14:56.373 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:14:56.374 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:14:56.374 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:14:56.374 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:14:56.374 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:14:56.374 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:14:56.374 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:14:56.374 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:14:56.375 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:14:57.841 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:14:57.842 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:14:57.842 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:14:57.842 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:14:57.843 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:14:57.843 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?, ?
2022-04-29 19:14:57.843 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer), 4(Integer)
2022-04-29 19:14:57.846 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:14:57.846 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 8, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 1, 1, 6, 6, 遇到的异常
2022-04-29 19:14:57.847 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 10, 什么是ioc, 2022-04-08 19:04:25.714000, 0, 1, 7, 7, spring
2022-04-29 19:14:57.847 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 9, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 1, 1, 6, 6, 遇到的异常
2022-04-29 19:14:57.847 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 11, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 0, 1, 9, 9, springmvc
2022-04-29 19:14:57.848 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:14:57.848 [http-nio-8080-exec-10] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:14:57.849 [http-nio-8080-exec-10] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:14:57.849 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:14:57.849 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:14:57.850 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:14:57.850 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:14:57.850 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:14:57.850 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:14:57.850 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:14:57.851 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:14:57.851 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:14:57.851 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:14:57.851 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:14:57.851 [http-nio-8080-exec-10] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:15:03.734 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:15:03.734 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: Failed(String)
2022-04-29 19:15:03.742 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:15:03.742 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 1
2022-04-29 19:15:03.742 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:15:03.743 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:15:03.743 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: Failed(String), 4(Integer)
2022-04-29 19:15:03.744 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:15:03.744 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:15:03.744 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 1
2022-04-29 19:15:10.157 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:15:10.157 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String)
2022-04-29 19:15:10.158 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:15:10.158 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 8
2022-04-29 19:15:10.158 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:15:10.158 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:15:10.158 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: (String), 4(Integer)
2022-04-29 19:15:10.159 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:15:10.159 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:15:10.160 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:15:10.160 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:15:10.160 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:15:10.160 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:15:13.121 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:15:13.122 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String)
2022-04-29 19:15:13.122 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:15:13.122 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 8
2022-04-29 19:15:13.122 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:15:13.123 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:15:13.123 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: (String), 4(Integer)
2022-04-29 19:15:13.124 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:15:13.124 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:15:13.124 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:15:13.124 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:15:13.124 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:15:13.125 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:17:37.241 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 104976 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:17:37.245 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:17:37.299 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:17:37.299 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:17:38.118 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.lu.config.ShiroConfig$$EnhancerBySpringCGLIB$$50ca2526] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:17:38.152 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:17:38.160 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$9e3b2272] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:17:38.166 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:17:38.171 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:17:38.193 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:17:38.209 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:17:38.248 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:17:38.256 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:17:38.333 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:17:38.336 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:17:38.338 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userServiceImpl' of type [com.lu.service.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:17:38.339 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRealm' of type [com.lu.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:17:39.160 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:17:39.398 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:17:39.405 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:17:39.406 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:17:39.406 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:17:39.556 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:17:39.557 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2258 ms
2022-04-29 19:17:39.864 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:17:39.939 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:17:40.259 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:17:40.273 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:17:40.288 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:17:40.296 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 3.477 seconds (JVM running for 4.966)
2022-04-29 19:17:42.660 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 19:17:42.661 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 19:17:42.668 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2022-04-29 19:17:47.812 [http-nio-8080-exec-10] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-04-29 19:17:47.956 [http-nio-8080-exec-10] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-04-29 19:17:47.961 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - ==>  Preparing: select id, avatar, create_time, email, nickname, password, type, update_time, username from t_user where username = ?
2022-04-29 19:17:47.977 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - ==> Parameters: lu(String)
2022-04-29 19:17:48.026 [http-nio-8080-exec-10] TRACE com.lu.mapper.UserMapper.findByUsername - <==    Columns: id, avatar, create_time, email, nickname, password, type, update_time, username
2022-04-29 19:17:48.029 [http-nio-8080-exec-10] TRACE com.lu.mapper.UserMapper.findByUsername - <==        Row: 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu
2022-04-29 19:17:48.032 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - <==      Total: 1
2022-04-29 19:17:49.615 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:17:49.615 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:17:49.770 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:17:49.770 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:17:49.770 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:17:49.772 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:17:49.772 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:17:49.773 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:17:49.775 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:17:49.776 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:17:49.776 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:17:49.777 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 19:17:49.777 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:17:49.777 [http-nio-8080-exec-4] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:17:49.778 [http-nio-8080-exec-4] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:17:49.779 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:17:49.780 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:17:49.782 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:17:49.783 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:17:49.784 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:17:49.784 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:17:49.785 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:17:49.786 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:17:49.788 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:17:49.789 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:17:49.789 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:17:49.789 [http-nio-8080-exec-4] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:17:51.633 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:17:51.633 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String)
2022-04-29 19:17:51.735 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:17:51.735 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 8
2022-04-29 19:17:51.735 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:17:51.736 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:17:51.736 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: (String), 4(Integer)
2022-04-29 19:17:51.737 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:17:51.737 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:17:51.738 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:17:51.758 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:17:51.758 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:17:51.759 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:17:51.759 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.findByType - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE type_id=? AND published=1 ORDER BY b.create_time DESC
2022-04-29 19:17:51.759 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.findByType - ==> Parameters: null
2022-04-29 19:17:51.784 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.findByType - <==      Total: 0
2022-04-29 19:18:08.407 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:18:08.408 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String)
2022-04-29 19:18:08.409 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:18:08.410 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 8
2022-04-29 19:18:08.410 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:18:08.411 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:18:08.411 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: (String), 4(Integer)
2022-04-29 19:18:08.412 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:18:08.412 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:18:08.414 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:18:08.414 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:18:08.415 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:18:08.417 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:18:08.417 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findByType - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE type_id=? AND published=1 ORDER BY b.create_time DESC
2022-04-29 19:18:08.417 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findByType - ==> Parameters: null
2022-04-29 19:18:08.418 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findByType - <==      Total: 0
2022-04-29 19:18:08.996 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:18:08.997 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String)
2022-04-29 19:18:08.997 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:18:08.997 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 8
2022-04-29 19:18:08.997 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:18:08.998 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:18:08.998 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: (String), 4(Integer)
2022-04-29 19:18:08.999 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:18:08.999 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:18:09.000 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:18:09.000 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:18:09.000 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:18:09.001 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:18:09.001 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findByType - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE type_id=? AND published=1 ORDER BY b.create_time DESC
2022-04-29 19:18:09.001 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findByType - ==> Parameters: null
2022-04-29 19:18:09.002 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findByType - <==      Total: 0
2022-04-29 19:18:09.156 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:18:09.157 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String)
2022-04-29 19:18:09.158 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:18:09.158 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 8
2022-04-29 19:18:09.158 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:18:09.159 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:18:09.160 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: (String), 4(Integer)
2022-04-29 19:18:09.161 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:18:09.161 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:18:09.162 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:18:09.162 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:18:09.162 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:18:09.163 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:18:09.163 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.findByType - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE type_id=? AND published=1 ORDER BY b.create_time DESC
2022-04-29 19:18:09.164 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.findByType - ==> Parameters: null
2022-04-29 19:18:09.165 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.findByType - <==      Total: 0
2022-04-29 19:18:09.315 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:18:09.315 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String)
2022-04-29 19:18:09.316 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:18:09.316 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 8
2022-04-29 19:18:09.316 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:18:09.317 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:18:09.317 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: (String), 4(Integer)
2022-04-29 19:18:09.318 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:18:09.318 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:18:09.318 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:18:09.319 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:18:09.319 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:18:09.319 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:18:09.320 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findByType - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE type_id=? AND published=1 ORDER BY b.create_time DESC
2022-04-29 19:18:09.320 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findByType - ==> Parameters: null
2022-04-29 19:18:09.321 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findByType - <==      Total: 0
2022-04-29 19:20:05.226 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 100284 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:20:05.229 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:20:05.288 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:20:05.288 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:20:06.254 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.lu.config.ShiroConfig$$EnhancerBySpringCGLIB$$17a34152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:20:06.290 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:20:06.298 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$65143e9e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:20:06.304 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:20:06.310 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:20:06.331 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:20:06.351 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:20:06.402 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:20:06.412 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:20:06.518 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:20:06.525 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:20:06.527 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userServiceImpl' of type [com.lu.service.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:20:06.527 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRealm' of type [com.lu.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:20:07.571 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:20:07.845 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:20:07.851 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:20:07.851 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:20:07.948 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:20:08.085 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:20:08.085 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2797 ms
2022-04-29 19:20:08.612 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:20:08.693 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:20:09.095 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:20:09.110 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:20:09.126 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:20:09.134 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 4.444 seconds (JVM running for 5.928)
2022-04-29 19:20:22.383 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 19:20:22.383 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 19:20:22.391 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2022-04-29 19:20:27.845 [http-nio-8080-exec-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-04-29 19:20:27.968 [http-nio-8080-exec-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-04-29 19:20:27.974 [http-nio-8080-exec-7] DEBUG com.lu.mapper.UserMapper.findByUsername - ==>  Preparing: select id, avatar, create_time, email, nickname, password, type, update_time, username from t_user where username = ?
2022-04-29 19:20:27.990 [http-nio-8080-exec-7] DEBUG com.lu.mapper.UserMapper.findByUsername - ==> Parameters: lu(String)
2022-04-29 19:20:28.046 [http-nio-8080-exec-7] TRACE com.lu.mapper.UserMapper.findByUsername - <==    Columns: id, avatar, create_time, email, nickname, password, type, update_time, username
2022-04-29 19:20:28.047 [http-nio-8080-exec-7] TRACE com.lu.mapper.UserMapper.findByUsername - <==        Row: 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu
2022-04-29 19:20:28.048 [http-nio-8080-exec-7] DEBUG com.lu.mapper.UserMapper.findByUsername - <==      Total: 1
2022-04-29 19:20:29.267 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:20:29.268 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:20:29.273 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:20:29.273 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:20:29.274 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:20:29.275 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:20:29.276 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:20:29.277 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:20:29.280 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:20:29.280 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:20:29.281 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:20:29.281 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 19:20:29.281 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:20:29.282 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:20:29.282 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:20:29.284 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:20:29.285 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:20:29.286 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:20:29.288 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:20:29.289 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:20:29.290 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:20:29.292 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:20:29.293 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:20:29.294 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:20:29.295 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:20:29.296 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:20:29.296 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:20:31.559 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:20:31.559 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String)
2022-04-29 19:20:31.560 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:20:31.560 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 8
2022-04-29 19:20:31.560 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:20:31.561 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:20:31.561 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: (String), 4(Integer)
2022-04-29 19:20:31.562 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:20:31.562 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:31.563 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:31.564 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:31.564 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:31.565 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:20:31.565 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findByType - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE type_id=? AND published=1 ORDER BY b.create_time DESC
2022-04-29 19:20:31.566 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findByType - ==> Parameters: null
2022-04-29 19:20:31.566 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findByType - <==      Total: 0
2022-04-29 19:20:35.548 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:20:35.548 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:20:35.549 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:20:35.549 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:20:35.549 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:20:35.550 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:20:35.550 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:20:35.551 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:20:35.552 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:20:35.552 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:20:35.553 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:20:35.553 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 19:20:35.554 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:20:35.555 [http-nio-8080-exec-4] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:20:35.555 [http-nio-8080-exec-4] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:20:35.556 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:20:35.557 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:20:35.558 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:20:35.559 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:20:35.561 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:20:35.563 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:20:35.564 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:20:35.565 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:20:35.566 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:20:35.568 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:20:35.569 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:20:35.571 [http-nio-8080-exec-4] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:20:36.573 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:20:36.574 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:20:36.574 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:20:36.574 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:20:36.575 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:20:36.575 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?, ?
2022-04-29 19:20:36.575 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer), 4(Integer)
2022-04-29 19:20:36.576 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:20:36.576 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 8, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 1, 1, 6, 6, 遇到的异常
2022-04-29 19:20:36.609 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 10, 什么是ioc, 2022-04-08 19:04:25.714000, 0, 1, 7, 7, spring
2022-04-29 19:20:36.609 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 9, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 1, 1, 6, 6, 遇到的异常
2022-04-29 19:20:36.610 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 11, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 0, 1, 9, 9, springmvc
2022-04-29 19:20:36.610 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:20:36.611 [http-nio-8080-exec-9] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:20:36.611 [http-nio-8080-exec-9] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:20:36.612 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:20:36.612 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:20:36.613 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:20:36.614 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:20:36.614 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:20:36.616 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:20:36.617 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:20:36.618 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:20:36.619 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:20:36.619 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:20:36.620 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:20:36.620 [http-nio-8080-exec-9] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:20:44.292 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:20:44.293 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:20:44.293 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:20:44.293 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:20:44.293 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:20:44.294 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:20:44.294 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:20:44.295 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:20:44.295 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:20:44.296 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:20:44.296 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:20:44.296 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 19:20:44.297 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:20:44.298 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:20:44.298 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:20:44.299 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:20:44.299 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:20:44.300 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:20:44.300 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:20:44.300 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:20:44.301 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:20:44.301 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:20:44.301 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:20:44.302 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:20:44.302 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:20:44.302 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:20:44.302 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:20:53.480 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:20:53.482 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: m(String)
2022-04-29 19:20:53.483 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:20:53.483 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 5
2022-04-29 19:20:53.483 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:20:53.483 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:20:53.484 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: m(String), 4(Integer)
2022-04-29 19:20:53.484 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:20:53.484 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:53.485 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:53.485 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:53.485 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:53.486 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:20:53.486 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findByType - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE type_id=? AND published=1 ORDER BY b.create_time DESC
2022-04-29 19:20:53.486 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findByType - ==> Parameters: null
2022-04-29 19:20:53.487 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findByType - <==      Total: 0
2022-04-29 19:20:57.699 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:20:57.700 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: m(String)
2022-04-29 19:20:57.701 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:20:57.701 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 5
2022-04-29 19:20:57.701 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:20:57.702 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:20:57.702 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: m(String), 4(Integer)
2022-04-29 19:20:57.702 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:20:57.703 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:57.703 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:57.703 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:57.703 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:57.704 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:20:57.704 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findByType - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE type_id=? AND published=1 ORDER BY b.create_time DESC
2022-04-29 19:20:57.704 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findByType - ==> Parameters: null
2022-04-29 19:20:57.705 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findByType - <==      Total: 0
2022-04-29 19:20:58.074 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:20:58.075 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: m(String)
2022-04-29 19:20:58.076 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:20:58.076 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 5
2022-04-29 19:20:58.076 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:20:58.077 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:20:58.078 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: m(String), 4(Integer)
2022-04-29 19:20:58.079 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:20:58.079 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:58.079 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:58.080 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:58.080 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:58.080 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:20:58.081 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.findByType - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE type_id=? AND published=1 ORDER BY b.create_time DESC
2022-04-29 19:20:58.081 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.findByType - ==> Parameters: null
2022-04-29 19:20:58.082 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.findByType - <==      Total: 0
2022-04-29 19:20:58.973 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:20:58.973 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: m(String)
2022-04-29 19:20:58.974 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:20:58.974 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 5
2022-04-29 19:20:58.974 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:20:58.975 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:20:58.975 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: m(String), 4(Integer)
2022-04-29 19:20:58.978 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:20:58.978 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:58.978 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:58.978 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:58.979 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:58.979 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:20:58.979 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findByType - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE type_id=? AND published=1 ORDER BY b.create_time DESC
2022-04-29 19:20:58.980 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findByType - ==> Parameters: null
2022-04-29 19:20:58.980 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findByType - <==      Total: 0
2022-04-29 19:20:59.378 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:20:59.378 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: m(String)
2022-04-29 19:20:59.379 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:20:59.379 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 5
2022-04-29 19:20:59.379 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:20:59.380 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:20:59.380 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: m(String), 4(Integer)
2022-04-29 19:20:59.381 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:20:59.381 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:59.381 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:59.382 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:59.382 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:59.382 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:20:59.382 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findByType - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE type_id=? AND published=1 ORDER BY b.create_time DESC
2022-04-29 19:20:59.382 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findByType - ==> Parameters: null
2022-04-29 19:20:59.383 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findByType - <==      Total: 0
2022-04-29 19:20:59.534 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:20:59.534 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: m(String)
2022-04-29 19:20:59.535 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:20:59.535 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 5
2022-04-29 19:20:59.535 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:20:59.536 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:20:59.536 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: m(String), 4(Integer)
2022-04-29 19:20:59.537 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:20:59.537 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:59.537 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:59.538 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:59.538 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:59.538 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:20:59.539 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findByType - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE type_id=? AND published=1 ORDER BY b.create_time DESC
2022-04-29 19:20:59.539 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findByType - ==> Parameters: null
2022-04-29 19:20:59.539 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findByType - <==      Total: 0
2022-04-29 19:20:59.699 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:20:59.700 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: m(String)
2022-04-29 19:20:59.700 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:20:59.700 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 5
2022-04-29 19:20:59.701 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:20:59.701 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:20:59.701 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: m(String), 4(Integer)
2022-04-29 19:20:59.702 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:20:59.722 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:59.723 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:59.723 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:59.723 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:59.723 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:20:59.723 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findByType - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE type_id=? AND published=1 ORDER BY b.create_time DESC
2022-04-29 19:20:59.724 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findByType - ==> Parameters: null
2022-04-29 19:20:59.724 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findByType - <==      Total: 0
2022-04-29 19:20:59.847 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:20:59.848 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: m(String)
2022-04-29 19:20:59.848 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:20:59.848 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 5
2022-04-29 19:20:59.848 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:20:59.849 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:20:59.849 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: m(String), 4(Integer)
2022-04-29 19:20:59.850 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:20:59.850 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:59.850 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:59.851 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:59.851 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:20:59.851 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:20:59.852 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.findByType - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE type_id=? AND published=1 ORDER BY b.create_time DESC
2022-04-29 19:20:59.852 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.findByType - ==> Parameters: null
2022-04-29 19:20:59.853 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.findByType - <==      Total: 0
2022-04-29 19:21:21.101 [http-nio-8080-exec-2] INFO  com.lu.aspect.LogAspect - Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.lu.web.IndexController.indexPage', args=[1, {}]}
2022-04-29 19:21:21.108 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id JOIN t_user u ON b.user_id = u.id WHERE published = 1
2022-04-29 19:21:21.109 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - ==> Parameters: 
2022-04-29 19:21:21.111 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==    Columns: count(0)
2022-04-29 19:21:21.112 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==        Row: 8
2022-04-29 19:21:21.112 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==      Total: 1
2022-04-29 19:21:21.113 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email from t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id where published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:21:21.113 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - ==> Parameters: 4(Integer)
2022-04-29 19:21:21.245 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:21:21.245 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:21:21.245 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:21:21.245 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:21:21.246 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:21:21.246 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - <==      Total: 4
2022-04-29 19:21:21.246 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:21:21.246 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:21:21.247 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:21:21.247 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:21:21.247 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:21:21.247 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:21:21.248 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:21:21.248 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:21:21.248 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:21:21.248 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:21:21.248 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:21:21.249 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:21:21.249 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:21:21.249 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:21:21.249 [http-nio-8080-exec-2] INFO  com.lu.aspect.LogAspect - Result : index
2022-04-29 19:21:26.669 [http-nio-8080-exec-4] INFO  com.lu.aspect.LogAspect - Request : {url='http://localhost:8080/search', ip='0:0:0:0:0:0:0:1', classMethod='com.lu.web.IndexController.search', args=[1, spring, {}]}
2022-04-29 19:21:26.671 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:21:26.671 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: spring(String)
2022-04-29 19:21:26.672 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:21:26.672 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 3
2022-04-29 19:21:26.672 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:21:26.673 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:21:26.673 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: spring(String), 2(Integer)
2022-04-29 19:21:26.674 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:21:26.674 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:21:26.675 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:21:26.675 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 2
2022-04-29 19:21:26.675 [http-nio-8080-exec-4] INFO  com.lu.aspect.LogAspect - Result : search
2022-04-29 19:21:38.314 [http-nio-8080-exec-6] INFO  com.lu.aspect.LogAspect - Request : {url='http://localhost:8080/search', ip='0:0:0:0:0:0:0:1', classMethod='com.lu.web.IndexController.search', args=[1, m, {}]}
2022-04-29 19:21:38.315 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:21:38.316 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: m(String)
2022-04-29 19:21:38.316 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:21:38.316 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 5
2022-04-29 19:21:38.316 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:21:38.317 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:21:38.317 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: m(String), 2(Integer)
2022-04-29 19:21:38.318 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:21:38.318 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:21:38.318 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:21:38.318 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 2
2022-04-29 19:21:38.319 [http-nio-8080-exec-6] INFO  com.lu.aspect.LogAspect - Result : search
2022-04-29 19:21:46.128 [http-nio-8080-exec-2] INFO  com.lu.aspect.LogAspect - Request : {url='http://localhost:8080/search', ip='0:0:0:0:0:0:0:1', classMethod='com.lu.web.IndexController.search', args=[1, mybatis, {}]}
2022-04-29 19:21:46.130 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:21:46.130 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: mybatis(String)
2022-04-29 19:21:46.131 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:21:46.131 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 1
2022-04-29 19:21:46.131 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:21:46.132 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:21:46.132 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: mybatis(String), 2(Integer)
2022-04-29 19:21:46.133 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:21:46.133 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:21:46.133 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 1
2022-04-29 19:21:46.133 [http-nio-8080-exec-2] INFO  com.lu.aspect.LogAspect - Result : search
2022-04-29 19:27:42.652 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 123468 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:27:42.656 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:27:42.724 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:27:42.725 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:27:44.589 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.lu.config.ShiroConfig$$EnhancerBySpringCGLIB$$579e6fa1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:27:44.638 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:27:44.651 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$a50f6ced] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:27:44.659 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:27:44.668 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:27:44.698 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:27:44.718 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:27:44.759 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:27:44.766 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:27:45.032 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:27:45.035 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:27:45.036 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userServiceImpl' of type [com.lu.service.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:27:45.037 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRealm' of type [com.lu.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:27:45.952 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:27:46.247 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:27:46.254 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:27:46.255 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:27:46.255 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:27:46.441 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:27:46.441 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3716 ms
2022-04-29 19:27:46.866 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:27:46.942 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:27:47.274 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:27:47.288 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:27:47.305 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:27:47.313 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 5.256 seconds (JVM running for 7.015)
2022-04-29 19:27:51.010 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 19:27:51.011 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 19:27:51.022 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2022-04-29 19:27:51.055 [http-nio-8080-exec-1] INFO  com.lu.aspect.LogAspect - Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.lu.web.IndexController.indexPage', args=[1, {}]}
2022-04-29 19:27:51.075 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-04-29 19:27:51.392 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-04-29 19:27:51.429 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id JOIN t_user u ON b.user_id = u.id WHERE published = 1
2022-04-29 19:27:51.448 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - ==> Parameters: 
2022-04-29 19:27:51.725 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==    Columns: count(0)
2022-04-29 19:27:51.725 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==        Row: 8
2022-04-29 19:27:51.726 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==      Total: 1
2022-04-29 19:27:51.727 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email from t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id where published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:27:51.728 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - ==> Parameters: 4(Integer)
2022-04-29 19:27:51.733 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:27:51.737 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:27:51.739 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:27:51.740 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:27:51.740 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:27:51.741 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - <==      Total: 4
2022-04-29 19:27:51.743 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:27:51.743 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:27:51.758 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:27:51.759 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:27:51.761 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:27:51.762 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:27:51.763 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:27:51.765 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:27:51.766 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:27:51.767 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:27:51.768 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:27:51.769 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:27:51.769 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:27:51.769 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:27:51.770 [http-nio-8080-exec-1] INFO  com.lu.aspect.LogAspect - Result : index
2022-04-29 19:27:57.901 [http-nio-8080-exec-3] DEBUG com.lu.mapper.UserMapper.findByUsername - ==>  Preparing: select id, avatar, create_time, email, nickname, password, type, update_time, username from t_user where username = ?
2022-04-29 19:27:57.902 [http-nio-8080-exec-3] DEBUG com.lu.mapper.UserMapper.findByUsername - ==> Parameters: lu(String)
2022-04-29 19:27:57.903 [http-nio-8080-exec-3] TRACE com.lu.mapper.UserMapper.findByUsername - <==    Columns: id, avatar, create_time, email, nickname, password, type, update_time, username
2022-04-29 19:27:57.903 [http-nio-8080-exec-3] TRACE com.lu.mapper.UserMapper.findByUsername - <==        Row: 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu
2022-04-29 19:27:57.904 [http-nio-8080-exec-3] DEBUG com.lu.mapper.UserMapper.findByUsername - <==      Total: 1
2022-04-29 19:28:02.884 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - ==>  Preparing: select id, avatar, create_time, email, nickname, password, type, update_time, username from t_user where username = ?
2022-04-29 19:28:02.884 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - ==> Parameters: lu(String)
2022-04-29 19:28:02.885 [http-nio-8080-exec-10] TRACE com.lu.mapper.UserMapper.findByUsername - <==    Columns: id, avatar, create_time, email, nickname, password, type, update_time, username
2022-04-29 19:28:02.885 [http-nio-8080-exec-10] TRACE com.lu.mapper.UserMapper.findByUsername - <==        Row: 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu
2022-04-29 19:28:02.886 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - <==      Total: 1
2022-04-29 19:28:04.330 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:28:04.330 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:28:04.331 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:28:04.331 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:28:04.331 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:28:04.332 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:28:04.332 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:28:04.332 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:28:04.333 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:28:04.333 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:28:04.334 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:28:04.334 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 19:28:04.334 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:28:04.335 [http-nio-8080-exec-8] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:28:04.335 [http-nio-8080-exec-8] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:28:04.336 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:28:04.336 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:28:04.337 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:28:04.338 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:28:04.340 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:28:04.344 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:28:04.345 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:28:04.345 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:28:04.346 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:28:04.346 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:28:04.346 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:28:04.346 [http-nio-8080-exec-8] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:28:06.059 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND b.title LIKE ? AND t.id = ?
2022-04-29 19:28:06.059 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: %%(String), (String)
2022-04-29 19:28:06.092 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:28:06.092 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 19:28:06.092 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:28:08.064 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND b.title LIKE ? AND t.id = ?
2022-04-29 19:28:08.064 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: %%(String), (String)
2022-04-29 19:28:08.065 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:28:08.065 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 19:28:08.065 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:28:11.716 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND b.title LIKE ? AND t.id = ?
2022-04-29 19:28:11.716 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: %tt%(String), tt(String)
2022-04-29 19:28:11.745 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:28:11.745 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 19:28:11.745 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:28:13.356 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND b.title LIKE ? AND t.id = ?
2022-04-29 19:28:13.357 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: %t%(String), t(String)
2022-04-29 19:28:13.357 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:28:13.357 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 19:28:13.357 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:28:18.626 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND b.title LIKE ? AND t.id = ?
2022-04-29 19:28:18.626 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: %反射%(String), 反射(String)
2022-04-29 19:28:18.627 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:28:18.627 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 19:28:18.627 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:28:22.164 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND b.title LIKE ? AND t.id = ?
2022-04-29 19:28:22.164 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: %反射%(String), 反射(String)
2022-04-29 19:28:22.165 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:28:22.165 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 19:28:22.165 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:28:22.690 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND b.title LIKE ? AND t.id = ?
2022-04-29 19:28:22.691 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: %反射%(String), 反射(String)
2022-04-29 19:28:22.692 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:28:22.692 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 19:28:22.692 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:28:22.845 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND b.title LIKE ? AND t.id = ?
2022-04-29 19:28:22.846 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: %反射%(String), 反射(String)
2022-04-29 19:28:22.847 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:28:22.847 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 19:28:22.847 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:29:08.256 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND b.title LIKE ? AND t.id = ?
2022-04-29 19:29:08.257 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: %反射%(String), 反射(String)
2022-04-29 19:29:08.257 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:29:08.257 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 19:29:08.258 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:29:08.920 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND b.title LIKE ? AND t.id = ?
2022-04-29 19:29:08.920 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: %反射%(String), 反射(String)
2022-04-29 19:29:08.921 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:29:08.921 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 19:29:08.921 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:29:09.273 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND b.title LIKE ? AND t.id = ?
2022-04-29 19:29:09.274 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: %反射%(String), 反射(String)
2022-04-29 19:29:09.274 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:29:09.274 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 19:29:09.274 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:29:09.426 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND b.title LIKE ? AND t.id = ?
2022-04-29 19:29:09.426 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: %反射%(String), 反射(String)
2022-04-29 19:29:09.427 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:29:09.427 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 19:29:09.427 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:29:48.984 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 103160 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:29:48.987 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:29:49.047 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:29:49.047 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:29:50.020 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.lu.config.ShiroConfig$$EnhancerBySpringCGLIB$$fcbf2ff2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:29:50.059 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:29:50.068 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$4a302d3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:29:50.074 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:29:50.080 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:29:50.104 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:29:50.127 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:29:50.170 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:29:50.179 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:29:50.285 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:29:50.290 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:29:50.292 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userServiceImpl' of type [com.lu.service.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:29:50.293 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRealm' of type [com.lu.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:29:51.182 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:29:51.434 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:29:51.441 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:29:51.442 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:29:51.442 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:29:51.604 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:29:51.604 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2546 ms
2022-04-29 19:29:51.959 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:29:52.043 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:29:52.381 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:29:52.393 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:29:52.409 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:29:52.416 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 3.818 seconds (JVM running for 5.231)
2022-04-29 19:29:55.473 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 19:29:55.473 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 19:29:55.481 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2022-04-29 19:30:01.727 [http-nio-8080-exec-10] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-04-29 19:30:01.948 [http-nio-8080-exec-10] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-04-29 19:30:01.956 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - ==>  Preparing: select id, avatar, create_time, email, nickname, password, type, update_time, username from t_user where username = ?
2022-04-29 19:30:01.973 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - ==> Parameters: lu(String)
2022-04-29 19:30:02.112 [http-nio-8080-exec-10] TRACE com.lu.mapper.UserMapper.findByUsername - <==    Columns: id, avatar, create_time, email, nickname, password, type, update_time, username
2022-04-29 19:30:02.113 [http-nio-8080-exec-10] TRACE com.lu.mapper.UserMapper.findByUsername - <==        Row: 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu
2022-04-29 19:30:02.114 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - <==      Total: 1
2022-04-29 19:30:03.564 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:30:03.564 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:30:03.588 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:30:03.589 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:30:03.590 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:30:03.592 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:30:03.592 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:30:03.594 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:30:03.596 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:30:03.597 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:30:03.597 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:30:03.598 [http-nio-8080-exec-4] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 19:30:03.598 [http-nio-8080-exec-4] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:30:03.599 [http-nio-8080-exec-4] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:30:03.599 [http-nio-8080-exec-4] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:30:03.602 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:30:03.604 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:30:03.607 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:30:03.608 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:30:03.618 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:30:03.622 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:30:03.624 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:30:03.625 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:30:03.626 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:30:03.627 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:30:03.628 [http-nio-8080-exec-4] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:30:03.628 [http-nio-8080-exec-4] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:30:05.405 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND b.title LIKE ? AND t.id = ?
2022-04-29 19:30:05.405 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: %%(String), (String)
2022-04-29 19:30:05.406 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:30:05.406 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 19:30:05.406 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:30:37.559 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND b.title LIKE ? AND t.id = ?
2022-04-29 19:30:37.559 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: %反射%(String), 反射(String)
2022-04-29 19:30:37.560 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:30:37.560 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 19:30:37.560 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:31:39.925 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 87884 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:31:39.928 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:31:39.995 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:31:39.995 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:31:40.891 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.lu.config.ShiroConfig$$EnhancerBySpringCGLIB$$8dd4197] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:31:40.926 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:31:40.935 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$564e3ee3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:31:40.942 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:31:40.948 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:31:40.971 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:31:40.989 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:31:41.026 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:31:41.032 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:31:41.108 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:31:41.111 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:31:41.112 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userServiceImpl' of type [com.lu.service.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:31:41.113 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRealm' of type [com.lu.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:31:42.018 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:31:42.293 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:31:42.301 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:31:42.301 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:31:42.302 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:31:42.451 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:31:42.451 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2456 ms
2022-04-29 19:31:42.752 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:31:42.830 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:31:43.150 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:31:43.162 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:31:43.179 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:31:43.187 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 3.693 seconds (JVM running for 5.339)
2022-04-29 19:31:47.869 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 19:31:47.869 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 19:31:47.876 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2022-04-29 19:31:53.570 [http-nio-8080-exec-10] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-04-29 19:31:54.471 [http-nio-8080-exec-10] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-04-29 19:31:54.476 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - ==>  Preparing: select id, avatar, create_time, email, nickname, password, type, update_time, username from t_user where username = ?
2022-04-29 19:31:54.493 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - ==> Parameters: lu(String)
2022-04-29 19:31:54.538 [http-nio-8080-exec-10] TRACE com.lu.mapper.UserMapper.findByUsername - <==    Columns: id, avatar, create_time, email, nickname, password, type, update_time, username
2022-04-29 19:31:54.539 [http-nio-8080-exec-10] TRACE com.lu.mapper.UserMapper.findByUsername - <==        Row: 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu
2022-04-29 19:31:54.541 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - <==      Total: 1
2022-04-29 19:31:55.925 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:31:55.925 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:31:56.137 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:31:56.137 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:31:56.138 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:31:56.139 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:31:56.139 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:31:56.492 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:31:56.494 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:31:56.495 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:31:56.495 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:31:56.496 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 19:31:56.496 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:31:56.497 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:31:56.497 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:31:56.498 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:31:56.499 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:31:56.501 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:31:56.502 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:31:56.503 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:31:56.503 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:31:56.504 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:31:56.505 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:31:56.506 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:31:56.507 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:31:56.507 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:31:56.508 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:31:58.077 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b JOIN t_type t ON b.type_id = t.id WHERE b.type_id = t.id AND b.title LIKE ? AND t.id = ?
2022-04-29 19:31:58.078 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: %%(String), (String)
2022-04-29 19:31:58.078 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:31:58.078 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 19:31:58.078 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:32:03.310 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b JOIN t_type t ON b.type_id = t.id WHERE b.type_id = t.id AND b.title LIKE ? AND t.id = ?
2022-04-29 19:32:03.311 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: %反射%(String), 反射(String)
2022-04-29 19:32:03.311 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:32:03.312 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 19:32:03.312 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:33:16.536 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 106536 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:33:16.539 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:33:16.603 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:33:16.603 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:33:17.605 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.lu.config.ShiroConfig$$EnhancerBySpringCGLIB$$19f3dfdd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:33:17.645 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:33:17.655 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$6764dd29] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:33:17.662 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:33:17.668 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:33:17.690 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:33:17.707 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:33:17.744 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:33:17.756 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:33:17.828 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:33:17.833 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:33:17.834 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userServiceImpl' of type [com.lu.service.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:33:17.835 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRealm' of type [com.lu.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:33:18.650 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:33:18.893 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:33:18.900 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:33:18.900 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:33:18.900 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:33:19.043 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:33:19.043 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2440 ms
2022-04-29 19:33:19.336 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:33:19.408 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:33:19.743 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:33:19.761 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:33:19.782 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:33:19.790 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 3.747 seconds (JVM running for 5.32)
2022-04-29 19:33:23.515 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 19:33:23.515 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 19:33:23.522 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2022-04-29 19:33:29.526 [http-nio-8080-exec-9] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-04-29 19:33:29.622 [http-nio-8080-exec-9] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-04-29 19:33:29.628 [http-nio-8080-exec-9] DEBUG com.lu.mapper.UserMapper.findByUsername - ==>  Preparing: select id, avatar, create_time, email, nickname, password, type, update_time, username from t_user where username = ?
2022-04-29 19:33:29.658 [http-nio-8080-exec-9] DEBUG com.lu.mapper.UserMapper.findByUsername - ==> Parameters: lu(String)
2022-04-29 19:33:29.678 [http-nio-8080-exec-9] TRACE com.lu.mapper.UserMapper.findByUsername - <==    Columns: id, avatar, create_time, email, nickname, password, type, update_time, username
2022-04-29 19:33:29.679 [http-nio-8080-exec-9] TRACE com.lu.mapper.UserMapper.findByUsername - <==        Row: 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu
2022-04-29 19:33:29.681 [http-nio-8080-exec-9] DEBUG com.lu.mapper.UserMapper.findByUsername - <==      Total: 1
2022-04-29 19:33:30.934 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:33:30.934 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:33:30.987 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:33:30.988 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:33:30.989 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:33:30.991 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:33:30.991 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:33:30.992 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:33:30.994 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:33:30.995 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:33:30.995 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:33:30.996 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 19:33:30.996 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:33:30.996 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:33:30.996 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:33:30.998 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:33:30.998 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:33:31.000 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:33:31.001 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:33:31.002 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:33:31.004 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:33:31.006 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:33:31.007 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:33:31.008 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:33:31.009 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:33:31.010 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:33:31.010 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:33:32.618 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND b.title LIKE ? AND t.id = ?
2022-04-29 19:33:32.619 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: %%(String), (String)
2022-04-29 19:33:32.619 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:33:32.619 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 19:33:32.619 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:36:11.278 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 117540 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:36:11.279 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:36:11.358 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:36:11.358 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:36:12.126 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.lu.config.ShiroConfig$$EnhancerBySpringCGLIB$$4698c15c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:36:12.161 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:36:12.169 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$9409bea8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:36:12.175 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:36:12.181 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:36:12.202 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:36:12.218 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:36:12.255 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:36:12.267 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:36:12.340 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:36:12.343 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:36:12.366 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userServiceImpl' of type [com.lu.service.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:36:12.366 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRealm' of type [com.lu.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:36:13.172 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:36:13.412 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:36:13.419 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:36:13.420 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:36:13.420 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:36:13.569 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:36:13.569 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2210 ms
2022-04-29 19:36:13.867 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:36:13.939 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:36:14.261 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:36:14.274 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:36:14.289 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:36:14.296 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 3.458 seconds (JVM running for 4.984)
2022-04-29 19:36:20.012 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 19:36:20.012 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 19:36:20.020 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2022-04-29 19:36:25.413 [http-nio-8080-exec-4] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-04-29 19:36:25.518 [http-nio-8080-exec-4] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-04-29 19:36:25.524 [http-nio-8080-exec-4] DEBUG com.lu.mapper.UserMapper.findByUsername - ==>  Preparing: select id, avatar, create_time, email, nickname, password, type, update_time, username from t_user where username = ?
2022-04-29 19:36:25.540 [http-nio-8080-exec-4] DEBUG com.lu.mapper.UserMapper.findByUsername - ==> Parameters: lu(String)
2022-04-29 19:36:25.554 [http-nio-8080-exec-4] TRACE com.lu.mapper.UserMapper.findByUsername - <==    Columns: id, avatar, create_time, email, nickname, password, type, update_time, username
2022-04-29 19:36:25.556 [http-nio-8080-exec-4] TRACE com.lu.mapper.UserMapper.findByUsername - <==        Row: 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu
2022-04-29 19:36:25.557 [http-nio-8080-exec-4] DEBUG com.lu.mapper.UserMapper.findByUsername - <==      Total: 1
2022-04-29 19:36:26.839 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:36:26.839 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:36:26.872 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:36:26.872 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:36:26.873 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:36:26.874 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:36:26.874 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:36:26.875 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:36:26.877 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:36:26.878 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:36:26.878 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:36:26.879 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 19:36:26.879 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:36:26.879 [http-nio-8080-exec-5] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:36:26.879 [http-nio-8080-exec-5] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:36:26.881 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:36:26.881 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:36:26.883 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:36:26.884 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:36:26.885 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:36:26.886 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:36:26.886 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:36:26.887 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:36:26.888 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:36:26.889 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:36:26.890 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:36:26.890 [http-nio-8080-exec-5] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:36:28.356 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE b.type_id=t.id WHERE title LIKE "%" ? "%" and t.id=?; AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:36:28.505 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String), (String)
2022-04-29 19:36:28.597 [http-nio-8080-exec-8] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/blogs/search，Exception : {}
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '' "%"
        
        
            and t.id='';
        
' at line 11
### The error may exist in com/lu/mapper/BlogMapper.xml
### The error may involve com.lu.mapper.BlogMapper.searchByTitle-Inline
### The error occurred while setting parameters
### SQL: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email         FROM t_blog b         left outer         join t_type t         on b.type_id = t.id   join t_user u   on b.user_id=u.id          WHERE b.type_id=t.id                           WHERE title LIKE "%" ? "%"                               and t.id=?;                  AND published=1          ORDER BY b.create_time DESC) tmp_count
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '' "%"
        
        
            and t.id='';
        
' at line 11
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '' "%"
        
        
            and t.id='';
        
' at line 11
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy65.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy72.searchByTitle(Unknown Source)
	at com.lu.service.BlogServiceImpl.searchByTitle(BlogServiceImpl.java:46)
	at com.lu.web.admin.BlogController.searchBlogs(BlogController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '' "%"
        
        
            and t.id='';
        
' at line 11
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy91.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.executeAutoCount(PageInterceptor.java:201)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:113)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy89.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 73 common frames omitted
2022-04-29 19:36:28.598 [http-nio-8080-exec-8] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '' "%"
        
        
            and t.id='';
        
' at line 11
### The error may exist in com/lu/mapper/BlogMapper.xml
### The error may involve com.lu.mapper.BlogMapper.searchByTitle-Inline
### The error occurred while setting parameters
### SQL: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email         FROM t_blog b         left outer         join t_type t         on b.type_id = t.id   join t_user u   on b.user_id=u.id          WHERE b.type_id=t.id                           WHERE title LIKE "%" ? "%"                               and t.id=?;                  AND published=1          ORDER BY b.create_time DESC) tmp_count
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '' "%"
        
        
            and t.id='';
        
' at line 11
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '' "%"
        
        
            and t.id='';
        
' at line 11]
2022-04-29 19:36:41.748 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE b.type_id=t.id WHERE title LIKE "%" ? "%" and t.id=?; AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:36:41.748 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: 反射(String), 反射(String)
2022-04-29 19:36:41.749 [http-nio-8080-exec-9] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/blogs/search，Exception : {}
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '反射' "%"
        
        
            and t.id='反射' at line 11
### The error may exist in com/lu/mapper/BlogMapper.xml
### The error may involve com.lu.mapper.BlogMapper.searchByTitle-Inline
### The error occurred while setting parameters
### SQL: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email         FROM t_blog b         left outer         join t_type t         on b.type_id = t.id   join t_user u   on b.user_id=u.id          WHERE b.type_id=t.id                           WHERE title LIKE "%" ? "%"                               and t.id=?;                  AND published=1          ORDER BY b.create_time DESC) tmp_count
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '反射' "%"
        
        
            and t.id='反射' at line 11
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '反射' "%"
        
        
            and t.id='反射' at line 11
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy65.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy72.searchByTitle(Unknown Source)
	at com.lu.service.BlogServiceImpl.searchByTitle(BlogServiceImpl.java:46)
	at com.lu.web.admin.BlogController.searchBlogs(BlogController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '反射' "%"
        
        
            and t.id='反射' at line 11
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy91.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.executeAutoCount(PageInterceptor.java:201)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:113)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy89.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 73 common frames omitted
2022-04-29 19:36:41.812 [http-nio-8080-exec-9] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '反射' "%"
        
        
            and t.id='反射' at line 11
### The error may exist in com/lu/mapper/BlogMapper.xml
### The error may involve com.lu.mapper.BlogMapper.searchByTitle-Inline
### The error occurred while setting parameters
### SQL: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email         FROM t_blog b         left outer         join t_type t         on b.type_id = t.id   join t_user u   on b.user_id=u.id          WHERE b.type_id=t.id                           WHERE title LIKE "%" ? "%"                               and t.id=?;                  AND published=1          ORDER BY b.create_time DESC) tmp_count
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '反射' "%"
        
        
            and t.id='反射' at line 11
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '反射' "%"
        
        
            and t.id='反射' at line 11]
2022-04-29 19:37:08.313 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 94156 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:37:08.316 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:37:08.364 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:37:08.365 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:37:09.243 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.lu.config.ShiroConfig$$EnhancerBySpringCGLIB$$f3f4e534] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:09.281 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:09.300 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$4165e280] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:09.306 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:09.311 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:09.336 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:09.353 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:09.394 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:09.400 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:09.487 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:09.490 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:09.492 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userServiceImpl' of type [com.lu.service.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:09.493 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRealm' of type [com.lu.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:10.332 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:10.591 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:37:10.598 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:37:10.599 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:37:10.599 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:37:10.751 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:37:10.751 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2386 ms
2022-04-29 19:37:11.078 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:37:11.156 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:37:11.569 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:37:11.589 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:37:11.606 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:37:11.615 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 3.684 seconds (JVM running for 5.232)
2022-04-29 19:37:15.974 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 19:37:15.974 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 19:37:15.981 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2022-04-29 19:37:21.405 [http-nio-8080-exec-10] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-04-29 19:37:21.500 [http-nio-8080-exec-10] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-04-29 19:37:21.505 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - ==>  Preparing: select id, avatar, create_time, email, nickname, password, type, update_time, username from t_user where username = ?
2022-04-29 19:37:21.521 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - ==> Parameters: lu(String)
2022-04-29 19:37:21.587 [http-nio-8080-exec-10] TRACE com.lu.mapper.UserMapper.findByUsername - <==    Columns: id, avatar, create_time, email, nickname, password, type, update_time, username
2022-04-29 19:37:21.588 [http-nio-8080-exec-10] TRACE com.lu.mapper.UserMapper.findByUsername - <==        Row: 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu
2022-04-29 19:37:21.589 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - <==      Total: 1
2022-04-29 19:37:22.801 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:37:22.802 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:37:22.836 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:37:22.836 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:37:22.836 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:37:22.838 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:37:22.838 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:37:22.839 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:37:22.840 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:37:22.841 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:37:22.841 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:37:22.842 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 19:37:22.842 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:37:22.843 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:37:22.843 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:37:22.844 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:37:22.845 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:37:22.846 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:37:22.847 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:37:22.848 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:37:22.849 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:37:22.850 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:37:22.851 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:37:22.852 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:37:22.853 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:37:22.853 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:37:22.853 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:37:24.658 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE b.type_id=t.id WHERE title LIKE "%" ? "%" and t.id=?; and published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:37:24.658 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String), (String)
2022-04-29 19:37:24.705 [http-nio-8080-exec-5] ERROR com.lu.handler.ControllerExceptionHandler - Requst URL : http://localhost:8080/admin/blogs/search，Exception : {}
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '' "%"
        
        
            and t.id='';
        
' at line 11
### The error may exist in com/lu/mapper/BlogMapper.xml
### The error may involve com.lu.mapper.BlogMapper.searchByTitle-Inline
### The error occurred while setting parameters
### SQL: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email         FROM t_blog b         left outer         join t_type t         on b.type_id = t.id   join t_user u   on b.user_id=u.id          WHERE b.type_id=t.id                           WHERE title LIKE "%" ? "%"                               and t.id=?;                   and published=1          ORDER BY b.create_time DESC) tmp_count
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '' "%"
        
        
            and t.id='';
        
' at line 11
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '' "%"
        
        
            and t.id='';
        
' at line 11
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy65.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy72.searchByTitle(Unknown Source)
	at com.lu.service.BlogServiceImpl.searchByTitle(BlogServiceImpl.java:46)
	at com.lu.web.admin.BlogController.searchBlogs(BlogController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '' "%"
        
        
            and t.id='';
        
' at line 11
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy91.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.executeAutoCount(PageInterceptor.java:201)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:113)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy89.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 73 common frames omitted
2022-04-29 19:37:24.705 [http-nio-8080-exec-5] WARN  o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver - Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '' "%"
        
        
            and t.id='';
        
' at line 11
### The error may exist in com/lu/mapper/BlogMapper.xml
### The error may involve com.lu.mapper.BlogMapper.searchByTitle-Inline
### The error occurred while setting parameters
### SQL: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email         FROM t_blog b         left outer         join t_type t         on b.type_id = t.id   join t_user u   on b.user_id=u.id          WHERE b.type_id=t.id                           WHERE title LIKE "%" ? "%"                               and t.id=?;                   and published=1          ORDER BY b.create_time DESC) tmp_count
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '' "%"
        
        
            and t.id='';
        
' at line 11
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE title LIKE "%" '' "%"
        
        
            and t.id='';
        
' at line 11]
2022-04-29 19:37:38.553 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 120472 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:37:38.555 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:37:38.610 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:37:38.610 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:37:39.508 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.lu.config.ShiroConfig$$EnhancerBySpringCGLIB$$249d20c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:39.547 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:39.556 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$720e1e11] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:39.562 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:39.568 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:39.594 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:39.616 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:39.662 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:39.679 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:39.764 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:39.768 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:39.769 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userServiceImpl' of type [com.lu.service.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:39.770 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRealm' of type [com.lu.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:40.572 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:37:40.812 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:37:40.819 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:37:40.819 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:37:40.819 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:37:40.961 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:37:40.962 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2351 ms
2022-04-29 19:37:41.248 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:37:41.324 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:37:41.649 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:37:41.664 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:37:41.680 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:37:41.687 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 3.568 seconds (JVM running for 5.049)
2022-04-29 19:38:12.612 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 122344 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:38:12.616 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:38:12.742 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:38:12.745 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:38:13.688 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.lu.config.ShiroConfig$$EnhancerBySpringCGLIB$$fcbf2ff2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:13.726 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:13.734 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$4a302d3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:13.741 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:13.748 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:13.770 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:13.786 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:13.829 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:13.841 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:13.955 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:13.959 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:13.962 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userServiceImpl' of type [com.lu.service.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:13.963 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRealm' of type [com.lu.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:14.809 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:15.087 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:38:15.093 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:38:15.094 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:38:15.094 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:38:15.243 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:38:15.244 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2499 ms
2022-04-29 19:38:15.541 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:38:15.618 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:38:15.944 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:38:15.971 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:38:15.991 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:38:15.999 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 3.902 seconds (JVM running for 5.973)
2022-04-29 19:38:33.732 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 123384 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:38:33.736 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:38:33.787 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:38:33.788 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:38:34.534 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.lu.config.ShiroConfig$$EnhancerBySpringCGLIB$$1dabae51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:34.569 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:34.577 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$6b1cab9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:34.584 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:34.590 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:34.612 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:34.629 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:34.673 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:34.685 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:34.755 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:34.758 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:34.759 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userServiceImpl' of type [com.lu.service.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:34.760 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRealm' of type [com.lu.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:35.575 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 19:38:35.820 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:38:35.826 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:38:35.827 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:38:35.827 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:38:35.969 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:38:35.969 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2181 ms
2022-04-29 19:38:36.268 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:38:36.343 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:38:36.707 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:38:36.723 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:38:36.739 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:38:36.746 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 3.49 seconds (JVM running for 6.013)
2022-04-29 19:38:55.855 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 19:38:55.855 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 19:38:55.862 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2022-04-29 19:39:00.590 [http-nio-8080-exec-10] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-04-29 19:39:00.858 [http-nio-8080-exec-10] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-04-29 19:39:00.864 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - ==>  Preparing: select id, avatar, create_time, email, nickname, password, type, update_time, username from t_user where username = ?
2022-04-29 19:39:00.880 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - ==> Parameters: lu(String)
2022-04-29 19:39:00.893 [http-nio-8080-exec-10] TRACE com.lu.mapper.UserMapper.findByUsername - <==    Columns: id, avatar, create_time, email, nickname, password, type, update_time, username
2022-04-29 19:39:00.894 [http-nio-8080-exec-10] TRACE com.lu.mapper.UserMapper.findByUsername - <==        Row: 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu
2022-04-29 19:39:00.895 [http-nio-8080-exec-10] DEBUG com.lu.mapper.UserMapper.findByUsername - <==      Total: 1
2022-04-29 19:39:01.975 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:39:01.975 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:39:01.976 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:39:01.976 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:39:01.976 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:39:01.978 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:39:01.978 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:39:02.003 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:39:02.005 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:39:02.005 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:39:02.006 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:39:02.006 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 19:39:02.006 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:39:02.007 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:39:02.007 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:39:02.009 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:39:02.009 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:39:02.010 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:39:02.011 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:39:02.012 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:39:02.013 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:39:02.014 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:39:02.015 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:39:02.016 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:39:02.017 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:39:02.017 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:39:02.018 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:39:07.368 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:39:07.470 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: 反射(String)
2022-04-29 19:39:07.471 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:39:07.471 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 1
2022-04-29 19:39:07.471 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:39:07.472 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:39:07.472 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: 反射(String), 4(Integer)
2022-04-29 19:39:07.525 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:39:07.525 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:39:07.526 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 1
2022-04-29 19:39:49.513 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 19:39:49.514 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: (String)
2022-04-29 19:39:49.514 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 19:39:49.514 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 8
2022-04-29 19:39:49.515 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 19:39:49.515 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 19:39:49.516 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: (String), 4(Integer)
2022-04-29 19:39:49.516 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 19:39:49.516 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:39:49.517 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:39:49.518 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:39:49.519 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 19:39:49.520 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 4
2022-04-29 19:40:40.437 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:40:40.437 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:40:40.438 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:40:40.438 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:40:40.439 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:40:40.440 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:40:40.442 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:40:40.443 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:40:40.444 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:40:40.446 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:40:40.448 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:40:40.448 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:40:40.448 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:40:40.449 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:40:40.449 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TagMapper.findAllTag - ==>  Preparing: select id, name from t_tag order by id DESC
2022-04-29 19:40:40.449 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TagMapper.findAllTag - ==> Parameters: 
2022-04-29 19:40:40.629 [http-nio-8080-exec-1] TRACE com.lu.mapper.TagMapper.findAllTag - <==    Columns: id, name
2022-04-29 19:40:40.629 [http-nio-8080-exec-1] TRACE com.lu.mapper.TagMapper.findAllTag - <==        Row: 10, 知识
2022-04-29 19:40:40.630 [http-nio-8080-exec-1] TRACE com.lu.mapper.TagMapper.findAllTag - <==        Row: 9, ioc
2022-04-29 19:40:40.630 [http-nio-8080-exec-1] TRACE com.lu.mapper.TagMapper.findAllTag - <==        Row: 8, 反射
2022-04-29 19:40:40.630 [http-nio-8080-exec-1] TRACE com.lu.mapper.TagMapper.findAllTag - <==        Row: 5, 遇到的异常
2022-04-29 19:40:40.630 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TagMapper.findAllTag - <==      Total: 4
2022-04-29 19:40:53.850 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.insertBlog - ==>  Preparing: insert into t_blog (id,title, content, first_picture, flag, views, appreciation, share_statement, commentabled, published, recommend, create_time, update_time, type_id, user_id, description) values (?,?,?,?,?,?,?, ?,?,?,?,?, ?,?,?,?);
2022-04-29 19:40:53.852 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.insertBlog - ==> Parameters: null, aaa(String), a'a'a(String), (String), 原创(String), 0(Integer), false(Boolean), false(Boolean), false(Boolean), true(Boolean), false(Boolean), 2022-04-29 19:40:53.849(Timestamp), 2022-04-29 19:40:53.849(Timestamp), 7(Long), 1(Long), a'a'a(String)
2022-04-29 19:40:54.201 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.insertBlog - <==    Updates: 1
2022-04-29 19:40:54.221 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:40:54.221 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:40:54.268 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:40:54.268 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 9
2022-04-29 19:40:54.268 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:40:54.269 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:40:54.269 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:40:54.269 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:40:54.269 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 18, aaa, 2022-04-29 19:40:53.849000, 0, 1, 7, 7, spring
2022-04-29 19:40:54.270 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:40:54.270 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:40:54.270 [http-nio-8080-exec-8] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:40:54.271 [http-nio-8080-exec-8] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:40:54.272 [http-nio-8080-exec-8] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:40:54.272 [http-nio-8080-exec-8] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:40:54.273 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:40:54.274 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:40:54.274 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:40:54.308 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:40:54.308 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 18, 0, 0, <<BLOB>>, 2022-04-29 19:40:53.849000, 原创, , 1, 0, 0, aaa, 2022-04-29 19:40:53.849000, 0, 7, 1, a'a'a, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 18, 1
2022-04-29 19:40:54.309 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:40:54.309 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:40:54.309 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:40:54.310 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:40:54.310 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:40:54.310 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:40:54.311 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:40:54.311 [http-nio-8080-exec-8] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 11
2022-04-29 19:41:50.850 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findById - ==>  Preparing: select b.* , t.id as id1, t.name, u.id as id2, u.avatar, u.nickname, u.email, c.id as id3, c.avatar as avatar1, c.content as content1, c.create_time as create_time1, c.email as email1, c.nickname as nickname1, c.blog_id, c.parent_comment_id from t_blog b left join t_type t on b.type_id = t.id left join t_user u on b.user_id=u.id left JOIN t_comment c ON c.blog_id = b.id where b.id=?;
2022-04-29 19:41:50.851 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findById - ==> Parameters: 18(Long)
2022-04-29 19:41:50.975 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findById - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email, id3, avatar1, content1, create_time1, email1, nickname1, blog_id, parent_comment_id
2022-04-29 19:41:50.975 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.findById - <==        Row: 18, 0, 0, <<BLOB>>, 2022-04-29 19:40:53.849000, 原创, , 1, 0, 0, aaa, 2022-04-29 19:40:53.849000, 0, 7, 1, a'a'a, 7, spring, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com, null, null, null, null, null, null, null, null
2022-04-29 19:41:50.976 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.findById - <==      Total: 1
2022-04-29 19:41:50.976 [http-nio-8080-exec-10] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:41:50.977 [http-nio-8080-exec-10] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:41:50.978 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:41:50.978 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:41:50.979 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:41:50.979 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:41:50.979 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 18, 0, 0, <<BLOB>>, 2022-04-29 19:40:53.849000, 原创, , 1, 0, 0, aaa, 2022-04-29 19:40:53.849000, 0, 7, 1, a'a'a, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 18, 1
2022-04-29 19:41:50.979 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:41:50.980 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:41:50.980 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:41:50.980 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:41:50.981 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:41:50.981 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:41:50.981 [http-nio-8080-exec-10] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:41:50.981 [http-nio-8080-exec-10] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 11
2022-04-29 19:41:50.983 [http-nio-8080-exec-10] DEBUG com.lu.mapper.TagMapper.findAllTag - ==>  Preparing: select id, name from t_tag order by id DESC
2022-04-29 19:41:50.984 [http-nio-8080-exec-10] DEBUG com.lu.mapper.TagMapper.findAllTag - ==> Parameters: 
2022-04-29 19:41:50.986 [http-nio-8080-exec-10] TRACE com.lu.mapper.TagMapper.findAllTag - <==    Columns: id, name
2022-04-29 19:41:50.986 [http-nio-8080-exec-10] TRACE com.lu.mapper.TagMapper.findAllTag - <==        Row: 10, 知识
2022-04-29 19:41:50.986 [http-nio-8080-exec-10] TRACE com.lu.mapper.TagMapper.findAllTag - <==        Row: 9, ioc
2022-04-29 19:41:50.986 [http-nio-8080-exec-10] TRACE com.lu.mapper.TagMapper.findAllTag - <==        Row: 8, 反射
2022-04-29 19:41:50.987 [http-nio-8080-exec-10] TRACE com.lu.mapper.TagMapper.findAllTag - <==        Row: 5, 遇到的异常
2022-04-29 19:41:50.987 [http-nio-8080-exec-10] DEBUG com.lu.mapper.TagMapper.findAllTag - <==      Total: 4
2022-04-29 19:42:01.510 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.updateBlog - ==>  Preparing: update t_Blog SET title=?, content=?, flag=?, appreciation=?, share_statement=?, commentabled=?, published=?, recommend=?, update_time=?, type_id=?, description=? where id=?
2022-04-29 19:42:01.511 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.updateBlog - ==> Parameters: aaa(String), a'a'aa'sa'sa's(String), 原创(String), false(Boolean), false(Boolean), false(Boolean), true(Boolean), false(Boolean), 2022-04-29 19:42:01.492(Timestamp), 11(Long), a'a'aa's'sa'a's(String), 18(Long)
2022-04-29 19:42:01.579 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.updateBlog - <==    Updates: 1
2022-04-29 19:42:01.586 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:42:01.586 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:42:01.587 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:42:01.587 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 9
2022-04-29 19:42:01.587 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:42:01.588 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:42:01.588 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:42:01.589 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:42:01.589 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 18, aaa, 2022-04-29 19:42:01.492000, 0, 1, 11, 11, mybatis
2022-04-29 19:42:01.590 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:42:01.590 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:42:01.590 [http-nio-8080-exec-9] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:42:01.590 [http-nio-8080-exec-9] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:42:01.591 [http-nio-8080-exec-9] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:42:01.591 [http-nio-8080-exec-9] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:42:01.592 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:42:01.592 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:42:01.592 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:42:01.592 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:42:01.593 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:42:01.593 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:42:01.593 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:42:01.593 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:42:01.594 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:42:01.594 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 18, 0, 0, <<BLOB>>, 2022-04-29 19:40:53.849000, 原创, , 1, 0, 0, aaa, 2022-04-29 19:42:01.492000, 0, 11, 1, a'a'aa's'sa'a's, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 18, 1
2022-04-29 19:42:01.594 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:42:01.594 [http-nio-8080-exec-9] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:42:01.594 [http-nio-8080-exec-9] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 11
2022-04-29 19:42:14.947 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.findById - ==>  Preparing: select b.* , t.id as id1, t.name, u.id as id2, u.avatar, u.nickname, u.email, c.id as id3, c.avatar as avatar1, c.content as content1, c.create_time as create_time1, c.email as email1, c.nickname as nickname1, c.blog_id, c.parent_comment_id from t_blog b left join t_type t on b.type_id = t.id left join t_user u on b.user_id=u.id left JOIN t_comment c ON c.blog_id = b.id where b.id=?;
2022-04-29 19:42:14.948 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.findById - ==> Parameters: 18(Long)
2022-04-29 19:42:14.948 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.findById - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email, id3, avatar1, content1, create_time1, email1, nickname1, blog_id, parent_comment_id
2022-04-29 19:42:14.948 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.findById - <==        Row: 18, 0, 0, <<BLOB>>, 2022-04-29 19:40:53.849000, 原创, , 1, 0, 0, aaa, 2022-04-29 19:42:01.492000, 0, 11, 1, a'a'aa's'sa'a's, 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com, null, null, null, null, null, null, null, null
2022-04-29 19:42:14.949 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.findById - <==      Total: 1
2022-04-29 19:42:14.950 [http-nio-8080-exec-7] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:42:14.950 [http-nio-8080-exec-7] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:42:14.951 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:42:14.951 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:42:14.951 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:42:14.951 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:42:14.952 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:42:14.952 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:42:14.952 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:42:14.952 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:42:14.953 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:42:14.953 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 18, 0, 0, <<BLOB>>, 2022-04-29 19:40:53.849000, 原创, , 1, 0, 0, aaa, 2022-04-29 19:42:01.492000, 0, 11, 1, a'a'aa's'sa'a's, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 18, 1
2022-04-29 19:42:14.953 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:42:14.953 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:42:14.953 [http-nio-8080-exec-7] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 11
2022-04-29 19:42:14.954 [http-nio-8080-exec-7] DEBUG com.lu.mapper.TagMapper.findAllTag - ==>  Preparing: select id, name from t_tag order by id DESC
2022-04-29 19:42:14.954 [http-nio-8080-exec-7] DEBUG com.lu.mapper.TagMapper.findAllTag - ==> Parameters: 
2022-04-29 19:42:14.954 [http-nio-8080-exec-7] TRACE com.lu.mapper.TagMapper.findAllTag - <==    Columns: id, name
2022-04-29 19:42:14.954 [http-nio-8080-exec-7] TRACE com.lu.mapper.TagMapper.findAllTag - <==        Row: 10, 知识
2022-04-29 19:42:14.954 [http-nio-8080-exec-7] TRACE com.lu.mapper.TagMapper.findAllTag - <==        Row: 9, ioc
2022-04-29 19:42:14.954 [http-nio-8080-exec-7] TRACE com.lu.mapper.TagMapper.findAllTag - <==        Row: 8, 反射
2022-04-29 19:42:14.955 [http-nio-8080-exec-7] TRACE com.lu.mapper.TagMapper.findAllTag - <==        Row: 5, 遇到的异常
2022-04-29 19:42:14.955 [http-nio-8080-exec-7] DEBUG com.lu.mapper.TagMapper.findAllTag - <==      Total: 4
2022-04-29 19:42:18.826 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.updateBlog - ==>  Preparing: update t_Blog SET title=?, content=?, flag=?, appreciation=?, share_statement=?, commentabled=?, published=?, recommend=?, update_time=?, type_id=?, description=? where id=?
2022-04-29 19:42:18.826 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.updateBlog - ==> Parameters: aaa(String), a'a'aa'sa'sa's(String), 原创(String), false(Boolean), false(Boolean), false(Boolean), true(Boolean), false(Boolean), 2022-04-29 19:42:18.825(Timestamp), 8(Long), a'a'aa's'sa'a's(String), 18(Long)
2022-04-29 19:42:18.868 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.updateBlog - <==    Updates: 1
2022-04-29 19:42:18.877 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:42:18.878 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:42:18.878 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:42:18.878 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 9
2022-04-29 19:42:18.878 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:42:18.879 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:42:18.879 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:42:18.880 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:42:18.880 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 18, aaa, 2022-04-29 19:42:18.825000, 0, 1, 8, 8, springboot
2022-04-29 19:42:18.880 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:42:18.880 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:42:18.880 [http-nio-8080-exec-6] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:42:18.881 [http-nio-8080-exec-6] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:42:18.882 [http-nio-8080-exec-6] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:42:18.882 [http-nio-8080-exec-6] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:42:18.882 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:42:18.882 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:42:18.883 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:42:18.883 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:42:18.883 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:42:18.883 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 18, 0, 0, <<BLOB>>, 2022-04-29 19:40:53.849000, 原创, , 1, 0, 0, aaa, 2022-04-29 19:42:18.825000, 0, 8, 1, a'a'aa's'sa'a's, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 18, 1
2022-04-29 19:42:18.884 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:42:18.884 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:42:18.884 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:42:18.884 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:42:18.885 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:42:18.885 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:42:18.885 [http-nio-8080-exec-6] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 11
2022-04-29 19:43:08.278 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.deleteById - ==>  Preparing: delete from t_blog where id = ?
2022-04-29 19:43:08.279 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.deleteById - ==> Parameters: 18(Long)
2022-04-29 19:43:08.453 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.deleteById - <==    Updates: 1
2022-04-29 19:43:08.460 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 19:43:08.460 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 19:43:08.462 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 19:43:08.462 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 19:43:08.462 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 19:43:08.463 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 19:43:08.463 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 19:43:08.463 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 19:43:08.463 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 19:43:08.464 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 19:43:08.464 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 19:43:08.465 [http-nio-8080-exec-5] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 19:43:08.465 [http-nio-8080-exec-5] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 19:43:08.467 [http-nio-8080-exec-5] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 19:43:08.467 [http-nio-8080-exec-5] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 19:43:08.468 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 19:43:08.469 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 19:43:08.469 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 19:43:08.469 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 19:43:08.470 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 19:43:08.470 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 19:43:08.470 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 19:43:08.470 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 19:43:08.470 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 19:43:08.471 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:43:08.471 [http-nio-8080-exec-5] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 19:43:08.471 [http-nio-8080-exec-5] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 19:48:30.279 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 116832 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:48:30.281 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:48:30.337 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:48:30.337 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:48:31.653 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:48:31.660 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:48:31.660 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:48:31.660 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:48:31.743 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:48:31.743 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1406 ms
2022-04-29 19:48:32.281 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:48:32.354 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:48:32.696 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:48:32.709 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:48:32.729 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:48:32.738 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 3.003 seconds (JVM running for 4.579)
2022-04-29 19:48:36.423 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 19:48:36.423 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 19:48:36.431 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2022-04-29 19:55:52.264 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 118944 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:55:52.266 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:55:52.305 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:55:52.305 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:55:53.740 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:55:53.747 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:55:53.748 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:55:53.748 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:55:53.840 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:55:53.840 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1535 ms
2022-04-29 19:55:55.017 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:55:55.073 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'loginController' method 
com.lu.web.admin.LoginController#loginPage2()
to {GET /admin}: There is already 'loginController' bean method
com.lu.web.admin.LoginController#index() mapped.
2022-04-29 19:55:55.349 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2022-04-29 19:55:55.351 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2022-04-29 19:55:55.359 [restartedMain] INFO  o.s.b.a.logging.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-04-29 19:55:55.368 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'loginController' method 
com.lu.web.admin.LoginController#loginPage2()
to {GET /admin}: There is already 'loginController' bean method
com.lu.web.admin.LoginController#index() mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1794)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.lu.BlogApplication.main(BlogApplication.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'loginController' method 
com.lu.web.admin.LoginController#loginPage2()
to {GET /admin}: There is already 'loginController' bean method
com.lu.web.admin.LoginController#index() mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:636)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:603)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:318)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:378)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:75)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$1(AbstractHandlerMethodMapping.java:288)
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:286)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:258)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:217)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:205)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1790)
	... 22 common frames omitted
2022-04-29 19:56:55.286 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 117032 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:56:55.289 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:56:55.344 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:56:55.345 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:56:56.437 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:56:56.446 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:56:56.447 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:56:56.447 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:56:56.534 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:56:56.535 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1190 ms
2022-04-29 19:56:57.092 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:56:57.165 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:56:57.515 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:56:57.529 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:56:57.549 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:56:57.561 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 2.76 seconds (JVM running for 4.43)
2022-04-29 19:57:00.805 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 19:57:00.805 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 19:57:00.812 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2022-04-29 19:57:23.724 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 119792 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:57:23.727 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:57:23.793 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:57:23.793 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:57:24.843 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:57:24.850 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:57:24.850 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:57:24.850 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:57:24.938 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:57:24.938 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1145 ms
2022-04-29 19:57:25.462 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:57:25.518 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'loginController' method 
com.lu.web.admin.LoginController#loginPage2()
to {GET /admin}: There is already 'loginController' bean method
com.lu.web.admin.LoginController#index() mapped.
2022-04-29 19:57:25.518 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2022-04-29 19:57:25.520 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2022-04-29 19:57:25.527 [restartedMain] INFO  o.s.b.a.logging.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-04-29 19:57:25.534 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'loginController' method 
com.lu.web.admin.LoginController#loginPage2()
to {GET /admin}: There is already 'loginController' bean method
com.lu.web.admin.LoginController#index() mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1794)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.lu.BlogApplication.main(BlogApplication.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'loginController' method 
com.lu.web.admin.LoginController#loginPage2()
to {GET /admin}: There is already 'loginController' bean method
com.lu.web.admin.LoginController#index() mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:636)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:603)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:318)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:378)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:75)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$1(AbstractHandlerMethodMapping.java:288)
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:286)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:258)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:217)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:205)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1790)
	... 22 common frames omitted
2022-04-29 19:57:44.296 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 121560 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:57:44.300 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:57:44.347 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:57:44.347 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:57:45.331 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:57:45.337 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:57:45.338 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:57:45.338 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:57:45.421 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:57:45.421 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1074 ms
2022-04-29 19:57:45.964 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:57:46.041 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:57:46.365 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:57:46.378 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:57:46.394 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:57:46.402 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 2.563 seconds (JVM running for 4.022)
2022-04-29 19:57:51.080 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 19:57:51.081 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 19:57:51.088 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2022-04-29 19:57:51.355 [http-nio-8080-exec-1] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-1] Exception processing template "admin/index": An error happened during template parsing (template: "class path resource [templates/admin/index.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "admin/_fragments" - line 24, col 81)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "admin/_fragments" - line 24, col 81)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 76 common frames omitted
2022-04-29 19:57:51.358 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/index.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 19:57:53.418 [http-nio-8080-exec-9] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-9] Exception processing template "admin/index": An error happened during template parsing (template: "class path resource [templates/admin/index.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "admin/_fragments" - line 24, col 81)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "admin/_fragments" - line 24, col 81)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 76 common frames omitted
2022-04-29 19:57:53.419 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/index.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 19:57:54.329 [http-nio-8080-exec-2] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-2] Exception processing template "admin/index": An error happened during template parsing (template: "class path resource [templates/admin/index.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "admin/_fragments" - line 24, col 81)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "admin/_fragments" - line 24, col 81)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 76 common frames omitted
2022-04-29 19:57:54.329 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/index.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 19:57:55.329 [http-nio-8080-exec-8] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-8] Exception processing template "admin/index": An error happened during template parsing (template: "class path resource [templates/admin/index.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "admin/_fragments" - line 24, col 81)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "admin/_fragments" - line 24, col 81)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 76 common frames omitted
2022-04-29 19:57:55.342 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/index.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 19:58:07.708 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 118624 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:58:07.712 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:58:07.792 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:58:07.793 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:58:08.912 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:58:08.921 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:58:08.921 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:58:08.921 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:58:09.013 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:58:09.013 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1219 ms
2022-04-29 19:58:09.524 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:58:09.579 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'loginController' method 
com.lu.web.admin.LoginController#loginPage2()
to {GET /admin}: There is already 'loginController' bean method
com.lu.web.admin.LoginController#index() mapped.
2022-04-29 19:58:09.580 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2022-04-29 19:58:09.582 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2022-04-29 19:58:09.589 [restartedMain] INFO  o.s.b.a.logging.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-04-29 19:58:09.596 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'loginController' method 
com.lu.web.admin.LoginController#loginPage2()
to {GET /admin}: There is already 'loginController' bean method
com.lu.web.admin.LoginController#index() mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1794)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.lu.BlogApplication.main(BlogApplication.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'loginController' method 
com.lu.web.admin.LoginController#loginPage2()
to {GET /admin}: There is already 'loginController' bean method
com.lu.web.admin.LoginController#index() mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:636)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:603)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:318)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:378)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:75)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$1(AbstractHandlerMethodMapping.java:288)
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:286)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:258)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:217)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:205)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1790)
	... 22 common frames omitted
2022-04-29 19:59:50.717 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 102216 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 19:59:50.720 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 19:59:50.796 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 19:59:50.796 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 19:59:51.788 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 19:59:51.794 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 19:59:51.795 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 19:59:51.795 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 19:59:51.877 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 19:59:51.877 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1081 ms
2022-04-29 19:59:52.520 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 19:59:52.592 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 19:59:52.914 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 19:59:52.926 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 19:59:52.941 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 19:59:52.950 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 2.674 seconds (JVM running for 4.184)
2022-04-29 19:59:58.272 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 19:59:58.273 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 19:59:58.279 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2022-04-29 19:59:58.531 [http-nio-8080-exec-1] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-1] Exception processing template "admin/index": An error happened during template parsing (template: "class path resource [templates/admin/index.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "admin/_fragments" - line 24, col 81)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "admin/_fragments" - line 24, col 81)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 76 common frames omitted
2022-04-29 19:59:58.536 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/index.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 20:01:58.956 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 101328 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 20:01:58.959 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 20:01:59.018 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 20:01:59.018 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 20:02:01.876 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 20:02:01.883 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 20:02:01.884 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 20:02:01.884 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 20:02:01.974 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 20:02:01.974 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2956 ms
2022-04-29 20:02:02.889 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 20:02:02.979 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 20:02:03.359 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 20:02:03.375 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 20:02:03.395 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 20:02:03.404 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 5.054 seconds (JVM running for 6.963)
2022-04-29 20:02:09.256 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 20:02:09.256 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 20:02:09.275 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 18 ms
2022-04-29 20:02:09.580 [http-nio-8080-exec-1] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-1] Exception processing template "admin/index": An error happened during template parsing (template: "class path resource [templates/admin/index.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "admin/_fragments" - line 24, col 81)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "admin/_fragments" - line 24, col 81)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 76 common frames omitted
2022-04-29 20:02:09.588 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/index.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 20:02:10.589 [http-nio-8080-exec-3] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-3] Exception processing template "admin/index": An error happened during template parsing (template: "class path resource [templates/admin/index.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "admin/_fragments" - line 24, col 81)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "admin/_fragments" - line 24, col 81)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 76 common frames omitted
2022-04-29 20:02:10.590 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/index.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-04-29 20:20:02.328 [restartedMain] INFO  com.lu.BlogApplication - Starting BlogApplication on DESKTOP-O6H0IHG with PID 119388 (D:\shangguigu\bbb\blog-master\target\classes started by dell in D:\shangguigu\bbb\blog-master)
2022-04-29 20:20:02.331 [restartedMain] INFO  com.lu.BlogApplication - The following profiles are active: dev
2022-04-29 20:20:02.385 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-29 20:20:02.385 [restartedMain] INFO  o.s.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-29 20:20:05.013 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.lu.config.ShiroConfig$$EnhancerBySpringCGLIB$$99a22a69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 20:20:05.063 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 20:20:05.072 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e71327b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 20:20:05.080 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 20:20:05.087 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 20:20:05.120 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 20:20:05.140 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 20:20:05.181 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 20:20:05.187 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 20:20:05.277 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 20:20:05.283 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 20:20:05.285 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userServiceImpl' of type [com.lu.service.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 20:20:05.285 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRealm' of type [com.lu.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 20:20:06.460 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-04-29 20:20:06.950 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-04-29 20:20:06.974 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2022-04-29 20:20:06.976 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-04-29 20:20:06.977 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
2022-04-29 20:20:07.167 [restartedMain] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-04-29 20:20:07.167 [restartedMain] INFO  o.s.b.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4782 ms
2022-04-29 20:20:07.766 [restartedMain] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-04-29 20:20:07.852 [restartedMain] INFO  o.s.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page template: index
2022-04-29 20:20:08.260 [restartedMain] INFO  o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2022-04-29 20:20:08.275 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2022-04-29 20:20:08.292 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-04-29 20:20:08.300 [restartedMain] INFO  com.lu.BlogApplication - Started BlogApplication in 6.949 seconds (JVM running for 8.796)
2022-04-29 20:20:17.558 [http-nio-8080-exec-1] INFO  o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-29 20:20:17.559 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-04-29 20:20:17.568 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2022-04-29 20:20:17.602 [http-nio-8080-exec-1] INFO  com.lu.aspect.LogAspect - Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.lu.web.IndexController.indexPage', args=[1, {}]}
2022-04-29 20:20:17.617 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-04-29 20:20:18.661 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-04-29 20:20:18.700 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id JOIN t_user u ON b.user_id = u.id WHERE published = 1
2022-04-29 20:20:18.721 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - ==> Parameters: 
2022-04-29 20:20:18.922 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==    Columns: count(0)
2022-04-29 20:20:18.922 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==        Row: 8
2022-04-29 20:20:18.924 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==      Total: 1
2022-04-29 20:20:18.925 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email from t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id where published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 20:20:18.926 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - ==> Parameters: 4(Integer)
2022-04-29 20:20:19.176 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 20:20:19.181 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 20:20:19.183 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 20:20:19.183 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 20:20:19.184 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 20:20:19.185 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - <==      Total: 4
2022-04-29 20:20:19.187 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 20:20:19.187 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 20:20:19.206 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 20:20:19.207 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 20:20:19.208 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 20:20:19.209 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 20:20:19.210 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 20:20:19.211 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 20:20:19.213 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 20:20:19.213 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 20:20:19.215 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 20:20:19.216 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 20:20:19.216 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 20:20:19.216 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 20:20:19.216 [http-nio-8080-exec-1] INFO  com.lu.aspect.LogAspect - Result : index
2022-04-29 20:20:25.872 [http-nio-8080-exec-7] DEBUG com.lu.mapper.UserMapper.findByUsername - ==>  Preparing: select id, avatar, create_time, email, nickname, password, type, update_time, username from t_user where username = ?
2022-04-29 20:20:25.873 [http-nio-8080-exec-7] DEBUG com.lu.mapper.UserMapper.findByUsername - ==> Parameters: lu(String)
2022-04-29 20:20:25.874 [http-nio-8080-exec-7] TRACE com.lu.mapper.UserMapper.findByUsername - <==    Columns: id, avatar, create_time, email, nickname, password, type, update_time, username
2022-04-29 20:20:25.874 [http-nio-8080-exec-7] TRACE com.lu.mapper.UserMapper.findByUsername - <==        Row: 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu
2022-04-29 20:20:25.877 [http-nio-8080-exec-7] DEBUG com.lu.mapper.UserMapper.findByUsername - <==      Total: 1
2022-04-29 20:20:27.253 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 20:20:27.253 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 20:20:27.254 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 20:20:27.254 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 20:20:27.254 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 20:20:27.254 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 20:20:27.255 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 20:20:27.257 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 20:20:27.257 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 20:20:27.259 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 20:20:27.259 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 20:20:27.260 [http-nio-8080-exec-1] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 20:20:27.260 [http-nio-8080-exec-1] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 20:20:27.261 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 20:20:27.261 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 20:20:27.262 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 20:20:27.262 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 20:20:27.263 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 20:20:27.264 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 20:20:27.265 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 20:20:27.266 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 20:20:27.267 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 20:20:27.267 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 20:20:27.268 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 20:20:27.268 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 20:20:27.268 [http-nio-8080-exec-1] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 20:20:27.268 [http-nio-8080-exec-1] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 20:20:29.008 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 20:20:29.008 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: ere(String)
2022-04-29 20:20:29.010 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 20:20:29.010 [http-nio-8080-exec-3] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 0
2022-04-29 20:20:29.010 [http-nio-8080-exec-3] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 20:20:31.400 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 20:20:31.400 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: e(String)
2022-04-29 20:20:31.401 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 20:20:31.402 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 2
2022-04-29 20:20:31.402 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 20:20:31.404 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 20:20:31.405 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: e(String), 4(Integer)
2022-04-29 20:20:31.406 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 20:20:31.406 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 20:20:31.407 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 20:20:31.407 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 2
2022-04-29 20:20:31.587 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==>  Preparing: select count(0) from (select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC) tmp_count
2022-04-29 20:20:31.587 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - ==> Parameters: e(String)
2022-04-29 20:20:31.588 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==    Columns: count(0)
2022-04-29 20:20:31.588 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==        Row: 2
2022-04-29 20:20:31.588 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.searchByTitle_COUNT - <==      Total: 1
2022-04-29 20:20:31.589 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email FROM t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id WHERE title LIKE "%" ? "%" AND published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 20:20:31.589 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.searchByTitle - ==> Parameters: e(String), 4(Integer)
2022-04-29 20:20:31.589 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 20:20:31.590 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 20:20:31.590 [http-nio-8080-exec-10] TRACE com.lu.mapper.BlogMapper.searchByTitle - <==        Row: 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 6, 遇到的异常, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 20:20:31.591 [http-nio-8080-exec-10] DEBUG com.lu.mapper.BlogMapper.searchByTitle - <==      Total: 2
2022-04-29 20:20:32.417 [http-nio-8080-exec-6] DEBUG com.lu.mapper.TypeMapper.findAllType_COUNT - ==>  Preparing: SELECT count(0) FROM t_type t LEFT JOIN t_blog b ON b.type_id = t.id LEFT JOIN t_user u ON b.user_id = u.id
2022-04-29 20:20:32.417 [http-nio-8080-exec-6] DEBUG com.lu.mapper.TypeMapper.findAllType_COUNT - ==> Parameters: 
2022-04-29 20:20:32.420 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType_COUNT - <==    Columns: count(0)
2022-04-29 20:20:32.420 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType_COUNT - <==        Row: 10
2022-04-29 20:20:32.421 [http-nio-8080-exec-6] DEBUG com.lu.mapper.TypeMapper.findAllType_COUNT - <==      Total: 1
2022-04-29 20:20:32.423 [http-nio-8080-exec-6] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id LIMIT ?
2022-04-29 20:20:32.423 [http-nio-8080-exec-6] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 4(Integer)
2022-04-29 20:20:32.424 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 20:20:32.425 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 20:20:32.425 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 20:20:32.426 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 20:20:32.427 [http-nio-8080-exec-6] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 20:20:32.427 [http-nio-8080-exec-6] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 4
2022-04-29 20:20:33.434 [http-nio-8080-exec-9] DEBUG com.lu.mapper.TagMapper.findAllTag_COUNT - ==>  Preparing: SELECT count(0) FROM t_tag
2022-04-29 20:20:33.435 [http-nio-8080-exec-9] DEBUG com.lu.mapper.TagMapper.findAllTag_COUNT - ==> Parameters: 
2022-04-29 20:20:33.459 [http-nio-8080-exec-9] TRACE com.lu.mapper.TagMapper.findAllTag_COUNT - <==    Columns: count(0)
2022-04-29 20:20:33.459 [http-nio-8080-exec-9] TRACE com.lu.mapper.TagMapper.findAllTag_COUNT - <==        Row: 4
2022-04-29 20:20:33.459 [http-nio-8080-exec-9] DEBUG com.lu.mapper.TagMapper.findAllTag_COUNT - <==      Total: 1
2022-04-29 20:20:33.459 [http-nio-8080-exec-9] DEBUG com.lu.mapper.TagMapper.findAllTag - ==>  Preparing: select id, name from t_tag order by id DESC LIMIT ?
2022-04-29 20:20:33.460 [http-nio-8080-exec-9] DEBUG com.lu.mapper.TagMapper.findAllTag - ==> Parameters: 4(Integer)
2022-04-29 20:20:33.461 [http-nio-8080-exec-9] TRACE com.lu.mapper.TagMapper.findAllTag - <==    Columns: id, name
2022-04-29 20:20:33.461 [http-nio-8080-exec-9] TRACE com.lu.mapper.TagMapper.findAllTag - <==        Row: 10, 知识
2022-04-29 20:20:33.461 [http-nio-8080-exec-9] TRACE com.lu.mapper.TagMapper.findAllTag - <==        Row: 9, ioc
2022-04-29 20:20:33.461 [http-nio-8080-exec-9] TRACE com.lu.mapper.TagMapper.findAllTag - <==        Row: 8, 反射
2022-04-29 20:20:33.461 [http-nio-8080-exec-9] TRACE com.lu.mapper.TagMapper.findAllTag - <==        Row: 5, 遇到的异常
2022-04-29 20:20:33.461 [http-nio-8080-exec-9] DEBUG com.lu.mapper.TagMapper.findAllTag - <==      Total: 4
2022-04-29 20:20:34.880 [http-nio-8080-exec-8] DEBUG com.lu.mapper.TypeMapper.findAllType_COUNT - ==>  Preparing: SELECT count(0) FROM t_type t LEFT JOIN t_blog b ON b.type_id = t.id LEFT JOIN t_user u ON b.user_id = u.id
2022-04-29 20:20:34.881 [http-nio-8080-exec-8] DEBUG com.lu.mapper.TypeMapper.findAllType_COUNT - ==> Parameters: 
2022-04-29 20:20:34.882 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType_COUNT - <==    Columns: count(0)
2022-04-29 20:20:34.882 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType_COUNT - <==        Row: 10
2022-04-29 20:20:34.882 [http-nio-8080-exec-8] DEBUG com.lu.mapper.TypeMapper.findAllType_COUNT - <==      Total: 1
2022-04-29 20:20:34.884 [http-nio-8080-exec-8] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id LIMIT ?
2022-04-29 20:20:34.886 [http-nio-8080-exec-8] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 4(Integer)
2022-04-29 20:20:34.887 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 20:20:34.887 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 20:20:34.888 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 20:20:34.888 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 20:20:34.889 [http-nio-8080-exec-8] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 20:20:34.889 [http-nio-8080-exec-8] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 4
2022-04-29 20:20:35.612 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id
2022-04-29 20:20:35.612 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - ==> Parameters: 
2022-04-29 20:20:35.613 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==    Columns: count(0)
2022-04-29 20:20:35.613 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==        Row: 8
2022-04-29 20:20:35.613 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList_COUNT - <==      Total: 1
2022-04-29 20:20:35.613 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join t_type t on b.type_id = t.id order by b.update_time desc LIMIT ?
2022-04-29 20:20:35.613 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - ==> Parameters: 4(Integer)
2022-04-29 20:20:35.614 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==    Columns: id, title, update_time, recommend, published, type_id, id, name
2022-04-29 20:20:35.614 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 15, 反射, 2022-04-09 18:55:00.092000, 0, 1, 10, 10, javase
2022-04-29 20:20:35.614 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 14, mybatis简要, 2022-04-09 18:54:53.654000, 0, 1, 11, 11, mybatis
2022-04-29 20:20:35.614 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 13, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 1, 8, 8, springboot
2022-04-29 20:20:35.615 [http-nio-8080-exec-2] TRACE com.lu.mapper.BlogMapper.findAllBlogList - <==        Row: 12, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 1, 1, 9, 9, springmvc
2022-04-29 20:20:35.615 [http-nio-8080-exec-2] DEBUG com.lu.mapper.BlogMapper.findAllBlogList - <==      Total: 4
2022-04-29 20:20:35.617 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 20:20:35.619 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 20:20:35.620 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 20:20:35.620 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 20:20:35.621 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 20:20:35.621 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 20:20:35.621 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 20:20:35.621 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 20:20:35.622 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 20:20:35.622 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 20:20:35.622 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 20:20:35.622 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 20:20:35.623 [http-nio-8080-exec-2] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 20:20:35.623 [http-nio-8080-exec-2] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 20:20:36.603 [http-nio-8080-exec-7] INFO  com.lu.aspect.LogAspect - Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.lu.web.IndexController.indexPage', args=[1, {}]}
2022-04-29 20:20:36.604 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - ==>  Preparing: SELECT count(0) FROM t_blog b LEFT OUTER JOIN t_type t ON b.type_id = t.id JOIN t_user u ON b.user_id = u.id WHERE published = 1
2022-04-29 20:20:36.605 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - ==> Parameters: 
2022-04-29 20:20:36.605 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==    Columns: count(0)
2022-04-29 20:20:36.605 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==        Row: 8
2022-04-29 20:20:36.606 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog_COUNT - <==      Total: 1
2022-04-29 20:20:36.606 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - ==>  Preparing: select b.* ,t.id as id1,t.name, u.id as id2,u.avatar,u.nickname, u.email from t_blog b left outer join t_type t on b.type_id = t.id join t_user u on b.user_id=u.id where published=1 ORDER BY b.create_time DESC LIMIT ?
2022-04-29 20:20:36.606 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - ==> Parameters: 4(Integer)
2022-04-29 20:20:36.607 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==    Columns: id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id1, name, id2, avatar, nickname, email
2022-04-29 20:20:36.608 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 10, javase, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 20:20:36.609 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 11, mybatis, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 20:20:36.609 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 8, springboot, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 20:20:36.610 [http-nio-8080-exec-7] TRACE com.lu.mapper.BlogMapper.findPublishedBlog - <==        Row: 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 9, springmvc, 1, D:\shangguigu\image\myavatar.jpg, lu, 834808263@qq.com
2022-04-29 20:20:36.610 [http-nio-8080-exec-7] DEBUG com.lu.mapper.BlogMapper.findPublishedBlog - <==      Total: 4
2022-04-29 20:20:36.610 [http-nio-8080-exec-7] DEBUG com.lu.mapper.TypeMapper.findAllType - ==>  Preparing: select *, b.id as id1, u.id as id2 from t_type t LEFT JOIN t_blog b on b.type_id = t.id LEFT JOIN t_user u ON b.user_id=u.id
2022-04-29 20:20:36.610 [http-nio-8080-exec-7] DEBUG com.lu.mapper.TypeMapper.findAllType - ==> Parameters: 
2022-04-29 20:20:36.611 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==    Columns: id, name, id, appreciation, commentabled, content, create_time, flag, first_picture, published, recommend, share_statement, title, update_time, views, type_id, user_id, description, id, avatar, create_time, email, nickname, password, type, update_time, username, id1, id2
2022-04-29 20:20:36.611 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 8, 1, 1, <<BLOB>>, 2022-04-01 16:19:39.873000, 转载, https://www.sohu.com/a/197915708_657479, 1, 1, 0, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 2022-04-08 19:04:32.075000, 86, 6, 1, Error creating bean with name ‘sqlSessionFactory‘ defined in class path reso, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 8, 1
2022-04-29 20:20:36.612 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 6, 遇到的异常, 9, 1, 1, <<BLOB>>, 2022-04-04 00:28:22.403000, 转载, https://unsplash.it/100/100?image=1005, 1, 1, 0, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 2022-04-08 19:04:19.967000, 11, 6, 1, Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-cli) 的解决, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 9, 1
2022-04-29 20:20:36.612 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 7, spring, 10, 1, 1, <<BLOB>>, 2022-04-08 10:59:10.559000, 转载, , 1, 0, 0, 什么是ioc, 2022-04-08 19:04:25.714000, 1, 7, 1, 什么是ioc, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 10, 1
2022-04-29 20:20:36.612 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 8, springboot, 13, 1, 1, <<BLOB>>, 2022-04-08 19:06:43.434000, 转载, , 1, 0, 0, Spring Boot 项目工程结构, 2022-04-09 18:54:42.039000, 0, 8, 1, src/main/java路径：主要编写业务程序
src/main/resources路径：存放静态文件和配置文件
src/test/java路径：主要编写测试程序, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 13, 1
2022-04-29 20:20:36.613 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 11, 1, 1, <<BLOB>>, 2022-04-08 19:03:48.667000, 转载, , 1, 0, 0, Springmvc架构原理解析, 2022-04-08 19:04:06.759000, 2, 9, 1, Springmvc架构原理解析, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 11, 1
2022-04-29 20:20:36.613 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 9, springmvc, 12, 1, 1, <<BLOB>>, 2022-04-08 19:05:25.600000, 转载, , 1, 1, 1, SpringMVC常用注解, 2022-04-08 19:05:25.600000, 0, 9, 1, SpringMVC常用注解, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 12, 1
2022-04-29 20:20:36.613 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 10, javase, 15, 1, 1, <<BLOB>>, 2022-04-08 19:10:54.017000, 转载, , 1, 0, 0, 反射, 2022-04-09 18:55:00.092000, 10, 10, 1, 主要是指程序可以访问、检测和修改它本身状态或行为的一种能力Reflection是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息。, 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 15, 1
2022-04-29 20:20:36.613 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 11, mybatis, 14, 1, 1, <<BLOB>>, 2022-04-08 19:07:28.963000, 转载, , 1, 0, 0, mybatis简要, 2022-04-09 18:54:53.654000, 4, 11, 1, mybatis是什么？有什么特点？ 它是一款半自动的ORM持久层框架，具有较高的SQL灵活性，支持高级映射(一对一，一对多)，动态SQL，延迟加载和缓存等特性，但它的数据库无关性较低 , 1, D:\shangguigu\image\myavatar.jpg, 2022-03-31 21:21:39, 834808263@qq.com, lu, 8a546497c3157c236f35f861b4b0b075, 123456, 2022-03-01 21:22:32, lu, 14, 1
2022-04-29 20:20:36.614 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 12, mysql, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 20:20:36.614 [http-nio-8080-exec-7] TRACE com.lu.mapper.TypeMapper.findAllType - <==        Row: 13, javaweb, null, null, null, <<BLOB>>, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2022-04-29 20:20:36.614 [http-nio-8080-exec-7] DEBUG com.lu.mapper.TypeMapper.findAllType - <==      Total: 10
2022-04-29 20:20:36.614 [http-nio-8080-exec-7] INFO  com.lu.aspect.LogAspect - Result : index
